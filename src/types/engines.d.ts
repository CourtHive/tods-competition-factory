export interface TournamentEngine {
  addAdHocMatchUps: any;
  addCollectionDefinition: any;
  addCollectionGroup: any;
  addCourt: any;
  addCourts: any;
  addDrawDefinition: any;
  addDrawDefinitionExtension: any;
  addDrawDefinitionTimeItem: any;
  addDrawEntries: any;
  addEvent: any;
  addEventEntries: any;
  addEventEntryPairs: any;
  addEventExtension: any;
  addEventTimeItem: any;
  addExtension: any;
  addFlight: any;
  addIndividualParticipantIds: any;
  addMatchUpEndTime: any;
  addMatchUpOfficial: any;
  addMatchUpResumeTime: any;
  addMatchUpScheduledDate: any;
  addMatchUpScheduledTime: any;
  addMatchUpScheduleItems: any;
  addMatchUpStartTime: any;
  addMatchUpStopTime: any;
  addNotes: any;
  addParticipant: any;
  addParticipantExtension: any;
  addParticipants: any;
  addParticipantTimeItem: any;
  addPenalty: any;
  addPersons: any;
  addPlayoffStructures: any;
  addQualifyingStructure: any;
  addTimeItem: any;
  addTournamentExtension: any;
  addTournamentTimeItem: any;
  addVenue: any;
  addVoluntaryConsolationStage: any;
  addVoluntaryConsolationStructure: any;
  allDrawMatchUps: any;
  allEventMatchUps: any;
  allTournamentMatchUps: any;
  alternateDrawPositionAssignment: any;
  analyzeDraws: any;
  analyzeTournament: any;
  applyLineUps: any;
  assignDrawPosition: any;
  assignDrawPositionBye: any;
  assignMatchUpCourt: any;
  assignMatchUpSideParticipant: any;
  assignMatchUpVenue: any;
  assignSeedPositions: any;
  assignTieMatchUpParticipantId: any;
  attachConsolationStructures: any;
  attachEventPolicies: any;
  attachFlightProfile: any;
  attachPlayoffStructures: any;
  attachPolicies: any;
  attachQualifyingStructure: any;
  attachStructures: any;
  automatedPlayoffPositioning: any;
  automatedPositioning: any;
  autoSeeding: any;
  bulkMatchUpStatusUpdate: any;
  bulkRescheduleMatchUps: any;
  bulkScheduleMatchUps: any;
  bulkUpdatePublishedEventIds: any;
  checkInParticipant: any;
  checkOutParticipant: any;
  checkValidEntries: any;
  clearScheduledMatchUps: any;
  createGroupParticipant: any;
  credits: any;
  deleteAdHocMatchUps: any;
  deleteCourt: any;
  deleteDrawDefinitions: any;
  deleteEvents: any;
  deleteFlightAndFlightDraw: any;
  deleteFlightProfileAndFlightDraws: any;
  deleteParticipants: any;
  deleteVenue: any;
  deleteVenues: any;
  destroyPairEntry: any;
  devContext: any;
  devContext: any;
  drawMatchUps: any;
  drawMatic: any;
  eventMatchUps: any;
  executionQueue: any;
  findCourt: any;
  findDrawDefinitionExtension: any;
  findEventExtension: any;
  findExtension: any;
  findMatchUp: any;
  findParticipant: any;
  findParticipantExtension: any;
  findPolicy: any;
  findTournamentExtension: any;
  findVenue: any;
  generateAdHocMatchUps: any;
  generateAndPopulatePlayoffStructures: any;
  generateDrawDefinition: any;
  generateDrawDefinition?: any;
  generateDrawStructuresAndLinks: any;
  generateDrawTypeAndModifyDrawDefinition: any;
  generateFlightProfile: any;
  generateQualifyingStructure: any;
  generateSeedingScaleItems: any;
  generateTeamsFromParticipantAttribute: any;
  generateVoluntaryConsolation: any;
  getAllEventData: any;
  getAllowedDrawTypes: any;
  getAllowedMatchUpFormats: any;
  getAppliedPolicies: any;
  getAvailablePlayoffRounds: any;
  getCourtInfo: any;
  getCourts: any;
  getDevContext: any;
  getDrawData: any;
  getDrawDefinition: any;
  getDrawDefinitionTimeItem: any;
  getDrawParticipantRepresentativeIds: any;
  getEligibleVoluntaryConsolationParticipants: any;
  getEntriesAndSeedsCount: any;
  getEvent: any;
  getEventData: any;
  getEventMatchUpFormatTiming: any;
  getEventProperties: any;
  getEvents: any;
  getEventTimeItem: any;
  getFlightProfile: any;
  getMatchUpCompetitiveness: any;
  getMatchUpDailyLimits: any;
  getMatchUpDailyLimitsUpdate: any;
  getMatchUpFormat: any;
  getMatchUpFormatTiming: any;
  getMatchUpFormatTimingUpdate: any;
  getMatchUpScheduleDetails: any;
  getMatchUpsStats: any;
  getMaxEntryPosition: any;
  getModifiedMatchUpFormatTiming: any;
  getPairedParticipant: any;
  getParticipantEventDetails: any;
  getParticipantIdFinishingPositions: any;
  getParticipantMembership: any;
  getParticipantScaleItem: any;
  getParticipantSignInStatus: any;
  getParticipantTimeItem: any;
  getPolicyDefinitions: any;
  getPositionAssignments: any;
  getPositionAssignments?: any;
  getPredictiveAccuracy: any;
  getProfileRounds: any;
  getRoundMatchUps: any;
  getRounds: any;
  getScaledEntries: any;
  getSchedulingProfile: any;
  getSeedsCount: any;
  getState: any;
  getTeamLineUp: any;
  getTieFormat: any;
  getTournamentInfo: any;
  getTournamentParticipants: any;
  getTournamentPenalties: any;
  getTournamentPersons: any;
  getTournamentTimeItem: any;
  getVenueData: any;
  getVenuesAndCourts: any;
  isValidMatchUpFormat: any;
  luckyLoserDrawPositionAssignment: any;
  matchUpActions: any;
  mergeParticipants: any;
  modifyCollectionDefinition: any;
  modifyCourt: any;
  modifyCourtAvailability: any;
  modifyDrawName: any;
  modifyEntriesStatus: any;
  modifyEventEntries: any;
  modifyEventMatchUpFormatTiming: any;
  modifyIndividualParticipantIds: any;
  modifyMatchUpFormatTiming: any;
  modifyParticipant: any;
  modifyParticipantName: any;
  modifyParticipantOtherName: any;
  modifyParticipantsSignInStatus: any;
  modifyPenalty: any;
  modifySeedAssignment: any;
  modifyVenue: any;
  newTournamentRecord: any;
  orderCollectionDefinitions: any;
  participantScaleItem: any;
  participantScheduledMatchUps: any;
  positionActions: any;
  promoteAlternate: any;
  promoteAlternates: any;
  pruneDrawDefinition: any;
  publishEvent: any;
  publishEventSeeding: any;
  publishOrderOfPlay: any;
  qualifierDrawPositionAssignment: any;
  refreshEventDrawOrder: any;
  removeCollectionDefinition: any;
  removeCollectionGroup: any;
  removeDelegatedOutcome: any;
  removeDrawDefinitionExtension: any;
  removeDrawEntries: any;
  removeDrawPositionAssignment: any;
  removeEventEntries: any;
  removeEventExtension: any;
  removeEventMatchUpFormatTiming: any;
  removeEventPolicy: any;
  removeIndividualParticipantIds: any;
  removeMatchUpCourtAssignment: any;
  removeNotes: any;
  removeParticipantExtension: any;
  removeParticipantIdsFromAllTeams: any;
  removePenalty: any;
  removeScaleValues: any;
  removeSeeding: any;
  removeStructure: any;
  removeTieMatchUpParticipantId: any;
  removeTournamentExtension: any;
  replaceTieMatchUpParticipantId: any;
  reset: any;
  resetDrawDefinition: any;
  resetScorecard: any;
  resetTieFormat: any;
  resetVoluntaryConsolationStructure: any;
  scaledTeamAssignment: any;
  setDelegatedOutcome: any;
  setDrawParticipantRepresentativeIds: any;
  setEntryPosition: any;
  setEntryPositions: any;
  setEventDates: any;
  setEventEndDate: any;
  setEventStartDate: any;
  setMatchUpDailyLimits: any;
  setMatchUpFormat: any;
  setMatchUpStatus: any;
  setOrderOfFinish: any;
  setParticipantScaleItem: any;
  setParticipantScaleItems: any;
  setPositionAssignments: any;
  setSchedulingProfile: any;
  setState: any;
  setState: any;
  setSubOrder: any;
  setTournamentCategories: any;
  setTournamentDates: any;
  setTournamentEndDate: any;
  setTournamentId: any;
  setTournamentName: any;
  setTournamentNotes: any;
  setTournamentStartDate: any;
  swapDrawPositionAssignments: any;
  toggleParticipantCheckInState: any;
  tournamentMatchUps: any;
  unPublishEvent: any;
  unPublishEventSeeding: any;
  unPublishOrderOfPlay: any;
  updateDrawIdsOrder: any;
  updateTeamLineUp: any;
  validateLineUp: any;
  validateSchedulingProfile: any;
  version: any;
  withdrawParticipantAtDrawPosition: any;
}

export interface CompetitionEngine {
  addCourts: any;
  addDrawDefinition: any;
  addEventExtension: any;
  addExtension: any;
  addMatchUpEndTime: any;
  addMatchUpOfficial: any;
  addMatchUpResumeTime: any;
  addMatchUpScheduledDate: any;
  addMatchUpScheduledTime: any;
  addMatchUpScheduleItems: any;
  addMatchUpStartTime: any;
  addMatchUpStopTime: any;
  addParticipant: any;
  addPenalty: any;
  addPersonRequests: any;
  addSchedulingProfileRound: any;
  addVenue: any;
  allCompetitionMatchUps: any;
  assignMatchUpCourt: any;
  assignMatchUpVenue: any;
  attachPolicies: any;
  bulkMatchUpStatusUpdate: any;
  bulkRescheduleMatchUps: any;
  bulkScheduleMatchUps: any;
  bulkUpdateCourtAssignments: any;
  calculateScheduleTimes: any;
  clearScheduledMatchUps: any;
  competitionMatchUps: any;
  competitionScheduleMatchUps: any;
  credits: any;
  deleteVenue: any;
  devContext: any;
  executionQueue: any;
  findExtension: any;
  findMatchUpFormatTiming: any;
  findParticipant: any;
  generateBookings: any;
  generateVirtualCourts: any;
  getCompetitionDateRange: any;
  getCompetitionParticipants: any;
  getCompetitionPenalties: any;
  getCompetitionVenues: any;
  getDevContext: any;
  getEventMatchUpFormatTiming: any;
  getLinkedTournamentIds: any;
  getMatchUpDailyLimits: any;
  getMatchUpDailyLimitsUpdate: any;
  getMatchUpDependencies: any;
  getMatchUpFormatTimingUpdate: any;
  getParticipantScaleItem: any;
  getPersonRequests: any;
  getProfileRounds: any;
  getRounds: any;
  getScheduledRoundsDetails: any;
  getSchedulingProfile: any;
  getSchedulingProfileIssues: any;
  getState: any;
  getTournamentIds: any;
  getVenuesAndCourts: any;
  getVenuesReport: any;
  linkTournaments: any;
  matchUpActions: any;
  matchUpScheduleChange: any;
  modifyEventMatchUpFormatTiming: any;
  modifyMatchUpFormatTiming: any;
  modifyPenalty: any;
  modifyPersonRequests: any;
  modifyVenue: any;
  publishOrderOfPlay: any;
  removeEventMatchUpFormatTiming: any;
  removeExtension: any;
  removeMatchUpCourtAssignment: any;
  removePenalty: any;
  removePersonRequests: any;
  removeTournamentRecord: any;
  removeUnlinkedTournamentRecords: any;
  reorderUpcomingMatchUps: any;
  reset: any;
  scheduleMatchUps: any;
  scheduleProfileRounds: any;
  setMatchUpDailyLimits: any;
  setMatchUpStatus: any;
  setSchedulingProfile: any;
  setState: any;
  setTournamentRecord: any;
  toggleParticipantCheckInState: any;
  unlinkTournament: any;
  unlinkTournaments: any;
  unPublishOrderOfPlay: any;
  validateSchedulingProfile: any;
  version: any;
}

export interface DrawEngine {
  addAdHocMatchUps: any;
  addDrawEntries: any;
  addDrawEntry: any;
  addMatchUpEndTime: any;
  addMatchUpOfficial: any;
  addMatchUpResumeTime: any;
  addMatchUpScheduledDate: any;
  addMatchUpScheduledTime: any;
  addMatchUpScheduleItems: any;
  addMatchUpStartTime: any;
  addMatchUpStopTime: any;
  addMatchUpTimeItem: any;
  addPlayoffStructures: any;
  addQualifyingStructure: any;
  addVoluntaryConsolationStage: any;
  addVoluntaryConsolationStructure: any;
  allDrawMatchUps: any;
  allPlayoffPositionsFilled: any;
  allStructureMatchUps: any;
  alternateDrawPositionAssignment: any;
  analyzeSet: any;
  assignDrawPosition: any;
  assignDrawPositionBye: any;
  assignSeed: any;
  attachPlayoffStructures: any;
  attachPolicies: any;
  attachQualifyingStructure: any;
  automatedPositioning: any;
  buildDrawHierarchy: any;
  checkInParticipant: any;
  checkOutParticipant: any;
  checkSetIsComplete: any;
  clearDrawPosition: any;
  credits: any;
  deleteAdHocMatchUps: any;
  devContext: any;
  drawMatchUps: any;
  drawMatic: any;
  findMatchUp: any;
  generateAdHocMatchUps: any;
  generateAndPopulatePlayoffStructures: any;
  generateDrawStructuresAndLinks: any;
  generateDrawTypeAndModifyDrawDefinition: any;
  generateQualifyingLink: any;
  generateQualifyingStructure: any;
  generateScoreString: any;
  generateTieMatchUpScore: any;
  generateVoluntaryConsolation: any;
  getAvailablePlayoffRounds: any;
  getCheckedInParticipantIds: any;
  getDrawStructures: any;
  getEligibleVoluntaryConsolationParticipants: any;
  getEliminationDrawSize: any;
  getExitProfiles: any;
  getMatchUpContextIds: any;
  getMatchUpParticipantIds: any;
  getMatchUpScheduleDetails: any;
  getNextSeedBlock: any;
  getNextUnfilledDrawPositions: any;
  getParticipantIdFinishingPositions: any;
  getParticipantIdMatchUps: any;
  getPositionsPlayedOff: any;
  getQualifiersCount: any;
  getRoundMatchUps: any;
  getSeedBlocks: any;
  getSeedGroups: any;
  getSeedingThresholds: any;
  getSetComplement: any;
  getSourceRounds: any;
  getState: any;
  getStructureMatchUps: any;
  getStructureSeedAssignments: any;
  getTiebreakComplement: any;
  initializeStructureSeedAssignments: any;
  isCompletedStructure: any;
  isValidMatchUpFormat: any;
  keyValueScore: any;
  matchUpActions: any;
  matchUpDuration: any;
  matchUpSort: any;
  modifySeedAssignment: any;
  newDrawDefinition: any;
  parseMatchUpFormat: any;
  positionActions: any;
  removeDelegatedOutcome: any;
  removeEntry: any;
  removeStructure: any;
  reset: any;
  resetMatchUpTimeItems: any;
  resetScorecard: any;
  resolveDrawPositions: any;
  scoreHasValue: any;
  setDelegatedOutcome: any;
  setDrawDescription: any;
  setMatchUpFormat: any;
  setMatchUpStatus: any;
  setOrderOfFinish: any;
  setParticipants: any;
  setPositionAssignments: any;
  setStageAlternatesCount: any;
  setStageDrawSize: any;
  setStageQualifiersCount: any;
  setStageWildcardsCount: any;
  setState: any;
  setSubOrder: any;
  stringifyMatchUpFormat: any;
  structureActions: any;
  structureSort: any;
  swapDrawPositionAssignments: any;
  validateTieFormat: any;
  validDrawPositions: any;
  version: any;
}

export interface MatchUpEngine {
  addCollectionDefinition: any;
  addCollectionGroup: any;
  addGame: any;
  addPoint: any;
  addSet: any;
  addShot: any;
  analyzeMatchUp: any;
  analyzeSet: any;
  calculateHistoryScore: any;
  checkSetIsComplete: any;
  clearHistory: any;
  devContext: any;
  generateScoreString: any;
  generateTieMatchUpScore: any;
  getSetComplement: any;
  getState: any;
  getTiebreakComplement: any;
  isValidMatchUpFormat: any;
  keyValueScore: any;
  matchUpIsComplete: any;
  modifyCollectionDefinition: any;
  orderCollectionDefinitions: any;
  parseMatchUpFormat: any;
  redo: any;
  removeCollectionDefinition: any;
  removeCollectionGroup: any;
  reset: any;
  scoreHasValue: any;
  setServingSide: any;
  setState: any;
  stringifyMatchUpFormat: any;
  tallyParticipantResults: any;
  umo: any;
  undo: any;
  validateTieFormat: any;
  version: any;
}

export interface MocksEngine {
  anonymizeTournamentRecord: any;
  credits: any;
  devContext: any;
  generateEventWithDraw: any;
  generateOutcome: any;
  generateOutcomeFromScoreString: any;
  generateParticipants: any;
  generateTournamentRecord: any;
  modifyTournamentRecord: any;
  parseScoreString: any;
  setDeepCopy: any;
  version: any;
}

export interface ScaleEngine {
  calculateNewRatings: any;
  getState: any;
  getTournamentPoints: any;
  processMatchUps: any;
  reset: any;
  setState: any;
  setTournamentId: any;
  version: any;
}

export interface ScoreGovernor {
  analyzeSet: any;
  checkSetIsComplete: any;
  generateScoreString: any;
  generateTieMatchUpScore: any;
  getSetComplement: any;
  getTiebreakComplement: any;
  isValidMatchUpFormat: any;
  keyValueScore: any;
  parseMatchUpFormat: any;
  scoreHasValue: any;
  stringifyMatchUpFormat: any;
  validateTieFormat: any;
}
