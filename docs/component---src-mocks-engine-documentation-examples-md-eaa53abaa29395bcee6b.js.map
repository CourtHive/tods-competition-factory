{"version":3,"sources":["webpack:///../src/mocksEngine/documentation/examples.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4OAMaA,G,UAAe,S,2NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,0BADR,0BAGA,+JACA,+CAA8B,0BAAYC,WAAW,KAAvB,8BAA9B,6EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6EAIL,8JAA6I,0BAAYA,WAAW,KAAvB,YAA7I,kQAAoc,0BAAYA,WAAW,KAAvB,wCAApc,KACA,qBAAG,0BAAYA,WAAW,KAAvB,oEAAH,8DACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iZAwBL,4BAAW,0BAAYA,WAAW,KAAvB,8BAAX,mCAAqH,0BAAYA,WAAW,KAAvB,WAArH,QAAiL,0BAAYA,WAAW,KAAvB,YAAjL,6BAAmQ,0BAAYA,WAAW,KAAvB,oBAAnQ,iCAAiW,0BAAYA,WAAW,KAAvB,oBAAjW,aACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+H,yNAUTJ,EAAWK,gBAAiB","file":"component---src-mocks-engine-documentation-examples-md-eaa53abaa29395bcee6b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/charlesallen/Development/CourtHive/tods-competition-factory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"generating-tournaments\"\n    }}>{`Generating Tournaments`}</h1>\n    <p>{`The Mocks Engine is used to generate tournaments for many of the Jest tests suites used in the development of the Competition Factory.`}</p>\n    <p>{`With no parameters the `}<inlineCode parentName=\"p\">{`generateTournamentRecord()`}</inlineCode>{` method will generate a tournamentRecord with 32 individual participants:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { tournamentRecord } = mocksEngine.generateTournamentRecord({});\n`}</code></pre>\n    <p>{`In testing, very specific scenarios are required. Any number of draws can be added to a generated tournament, and scores for specific `}<inlineCode parentName=\"p\">{`matchUps`}</inlineCode>{` within the generated draw structures can be added as well. In the following example a Doubles draw with 32 positions is generated with 30 PAIR participants, leaving two positions to be filled with BYEs. The score is completed for the matchUp found using `}<inlineCode parentName=\"p\">{`{ roundNumber: 1, roundPosition: 2 }`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`const { outcome } = mocksEngine.generateOutcomeFromScoreString()`}</inlineCode>{` is used internally to generate a valid TODS score object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const drawProfiles = [\n  {\n    drawSize: 32,\n    participantsCount: 30,\n    participantType: PAIR,\n    outcomes: [\n      {\n        roundNumber: 1,\n        roundPosition: 2,\n        scoreString: '6-1 6-2',\n        winningSide: 1,\n      },\n    ],\n  },\n];\n\nconst {\n  eventIds,\n  drawIds: [drawId],\n  tournamentRecord,\n} = mocksEngine.generateTournamentRecord({ drawProfiles });\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`generateTournamentRecord()`}</inlineCode>{` method returns an array of the `}<inlineCode parentName=\"p\">{`drawIds`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`eventIds`}</inlineCode>{` present in the generated `}<inlineCode parentName=\"p\">{`tournamentRecord`}</inlineCode>{` to aid in calling subsequent `}<inlineCode parentName=\"p\">{`tournamentEngine`}</inlineCode>{` methods:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`tournamentEngine.setState(tournamentRecord);\n\nconst { matchUps } = tournamentEngine.allDrawMatchUps({ drawId });\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}