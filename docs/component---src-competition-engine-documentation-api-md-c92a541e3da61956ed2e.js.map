{"version":3,"sources":["webpack:///../src/competitionEngine/documentation/api.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2OAMaA,G,UAAe,S,4NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,6BADR,6BAGA,iBAAQ,CACN,GAAM,0BADR,0BAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,uEAIL,uBACA,iBAAQ,CACN,GAAM,uBADR,uBAGA,qJACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,oEAIL,uBACA,iBAAQ,CACN,GAAM,+BADR,+BAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mWAiBL,uBACA,iBAAQ,CACN,GAAM,cADR,cAGA,0DAAyC,sBAAQA,WAAW,KAAnB,yBAAzC,0DACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0CAIL,uBACA,iBAAQ,CACN,GAAM,YADR,YAGA,oFACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iJAML,uBACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,gHAA+F,0BAAYA,WAAW,KAAvB,qBAA/F,KACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yEAIL,uBACA,iBAAQ,CACN,GAAM,yBADR,yBAGA,8EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gLAUL,uBACA,iBAAQ,CACN,GAAM,gCADR,gCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uHASL,uBACA,iBAAQ,CACN,GAAM,2BADR,2BAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iMAQL,uBACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBACA,iBAAQ,CACN,GAAM,YADR,YAGA,yEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gEAIL,uBACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,4CAA2B,6BAAGA,WAAW,KAAQ,CAC7C,KAAQ,qDADe,iBAA3B,yBAGA,uBACA,iBAAQ,CACN,GAAM,iCADR,iCAGA,uBACA,iBAAQ,CACN,GAAM,WADR,WAGA,6KACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mDAIL,6B,0NAKJJ,EAAWK,gBAAiB","file":"component---src-competition-engine-documentation-api-md-c92a541e3da61956ed2e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/charlesallen/Development/CourtHive/tods-competition-factory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"competition-api-reference\"\n    }}>{`competition API Reference`}</h1>\n    <h2 {...{\n      \"id\": \"allcompetitionmatchups\"\n    }}>{`allCompetitionMatchUps`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { matchUps } = competitionEngine.allCompetitionMatchUps();\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"competitionmatchups\"\n    }}>{`competitionMatchUps`}</h2>\n    <p>{`Return an array of all matchUps, \"inContext\", contained within the collection of tournaments loaded into \\`competitionEngine.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { matchUps } = competitionEngine.competitionMatchUps();\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"competitionschedulematchups\"\n    }}>{`competitionScheduleMatchUps`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const matchUpFilters = {\n  isMatchUpTie: false,\n  scheduledDate, // scheduled date of matchUps to return\n\n  localTimeZone, // optional - used to convert scheduleDate\n  localPerspective: true,\n};\n\nconst {\n  completedMatchUps,\n  dateMatchUps,\n  courtsData,\n  venues,\n} = competitionEngine.competitionScheduleMatchUps({ matchUpFilters });\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"devcontext\"\n    }}>{`devContext`}</h2>\n    <p>{`Setting devContext(true) bypasses `}<strong parentName=\"p\">{`try {} catch (err) {}`}</strong>{` code block and in some cases enables enhanced logging`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`competitionEngine.devContext(true);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"getstate\"\n    }}>{`getState`}</h2>\n    <p>{`Returns a deep copy of the current competitionEngine state.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { tournaentRecords } = competition.getState({\n  convertExtensions, // optional - convert extensions to '_' prefixed attributes\n});\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"getvenuesandcourts\"\n    }}>{`getVenuesAndCourts`}</h2>\n    <p>{`Returns an aggregate view of venues and courts across all tournamentRecords loaded into `}<inlineCode parentName=\"p\">{`competitionEngine`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { courts, venues } = competitionEngine.getVenuesAndCourts();\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"matchupschedulechange\"\n    }}>{`matchUpScheduleChange`}</h2>\n    <p>{`Swaps the schedule details of two scheduled matchUps.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`competitionEngine.matchUpScheduleChange({\n  sourceMatchUpContextIds,\n  targetMatchUpContextIds,\n  sourceCourtId,\n  targetCourtId,\n  courtDayDate: dateSelected,\n});\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"removematchupcourtassignment\"\n    }}>{`removeMatchUpCourtAssignment`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`competitionEngine.removeMatchUpCourtAssignment({\n  drawId,\n  matchUpId,\n  tournamentId,\n  courtDayDate,\n});\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"reorderupcomingmatchups\"\n    }}>{`reorderUpcomingMatchUps`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const matchUpContextIds = [{ tournamentId, drawId, matchUpId }];\ncompetitionEngine.reorderUpcomingMatchUps({\n  matchUpContextIds,\n  firstToLast, // boolean - direction of reorder\n});\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"schedulematchups\"\n    }}>{`scheduleMatchUps`}</h2>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"setstate\"\n    }}>{`setState`}</h2>\n    <p>{`Loads tournament records into competitionEngine.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`competitionEngine.setsState(tournamentRecords, deepCopy);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"setsubscriptions\"\n    }}>{`setSubscriptions`}</h2>\n    <p>{`Please refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/tods-competition-factory/concepts/subscriptions\"\n      }}>{`Subscriptions`}</a>{` in General Concepts.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"toggleparticipantcheckinstate\"\n    }}>{`toggleParticipantCheckInState`}</h2>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"version\"\n    }}>{`version`}</h2>\n    <p>{`Returns NPM package version. Can be used in configurations that utilize Competition Factory engines on both client and server to ensure equivalency.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const version = competitionEngine.version();\n`}</code></pre>\n    <hr></hr>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}