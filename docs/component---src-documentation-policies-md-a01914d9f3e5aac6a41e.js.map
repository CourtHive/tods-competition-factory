{"version":3,"sources":["webpack:///../src/documentation/policies.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4OAMaA,G,UAAe,S,+MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,iLAAgK,0BAAYC,WAAW,KAAvB,oBAAhK,KAAkO,0BAAYA,WAAW,KAAvB,UAAlO,WAAgS,0BAAYA,WAAW,KAAvB,mBAAhS,cAA0W,0BAAYA,WAAW,KAAvB,SAA1W,uCAAmc,0BAAYA,WAAW,KAAvB,oBAAnc,QAAwgB,0BAAYA,WAAW,KAAvB,cAAxgB,aACA,4CAA2B,sBAAQA,WAAW,KAAI,kBAAIA,WAAW,UAAf,qBAAlD,mBACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8OASL,iBAAQ,CACN,GAAM,sBADR,sBAGA,sBACE,kBAAIA,WAAW,MAAf,iCACA,kBAAIA,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,2BACA,kBAAIA,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,yBACA,kBAAIA,WAAW,MAAf,uBACA,kBAAIA,WAAW,MAAf,uBACA,kBAAIA,WAAW,MAAf,4B,6MAMNJ,EAAWK,gBAAiB","file":"component---src-documentation-policies-md-a01914d9f3e5aac6a41e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/charlesallen/Development/CourtHive/tods-competition-factory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"policies\"\n    }}>{`Policies`}</h1>\n    <p>{`Policies determine how the various Competition Factory engines function and can shape the way that results are returned. Policies can be attached to the `}<inlineCode parentName=\"p\">{`tournamentRecord`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`events`}</inlineCode>{`, or to `}<inlineCode parentName=\"p\">{`drawDefinitions`}</inlineCode>{` within an `}<inlineCode parentName=\"p\">{`event`}</inlineCode>{`. They can also be passed into some `}<inlineCode parentName=\"p\">{`tournamentEngine`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`drawEngine`}</inlineCode>{` methods.`}</p>\n    <p>{`The structure of an `}<strong parentName=\"p\"><em parentName=\"strong\">{`policyDefinition`}</em></strong>{` is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  [policyType]: {      // e.g. 'seeding' or 'avoidance'\n    policyName: 'name'  // for 'seeding' can be the provider of the policy, e.g. 'ITF' or 'USTA'\n    ...attributes       // attributes relevant to the policyType\n  },\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"supported-policies\"\n    }}>{`Supported Policies`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`POLICY_TYPE_ROUND_ROBIN_TALLY`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_POSITION_ACTIONS`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_ROUND_NAMING`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_PARTICIPANT`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_SCHEDULING`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_AVOIDANCE`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_SEEDING`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_SCORING`}</li>\n      <li parentName=\"ul\">{`POLICY_TYPE_DRAWS`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}