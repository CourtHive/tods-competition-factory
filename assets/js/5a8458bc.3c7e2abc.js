"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9898],{7942:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(959);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),p=o,g=d["".concat(s,".").concat(p)]||d[p]||m[p]||a;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5685:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(8957),o=(n(959),n(7942));const a={title:"Engine Methods"},l=void 0,i={unversionedId:"engines/engine-methods",id:"engines/engine-methods",title:"Engine Methods",description:"importMethods",source:"@site/docs/engines/engine-methods.md",sourceDirName:"engines",slug:"/engines/engine-methods",permalink:"/tods-competition-factory/docs/engines/engine-methods",draft:!1,tags:[],version:"current",frontMatter:{title:"Engine Methods"},sidebar:"docs",previous:{title:"State Engines",permalink:"/tods-competition-factory/docs/engines/state-engines"},next:{title:"Engine Logging",permalink:"/tods-competition-factory/docs/engines/engine-logging"}},s={},u=[{value:"importMethods",id:"importmethods",level:2},{value:"getTournament",id:"gettournament",level:2},{value:"getState",id:"getstate",level:2},{value:"reset",id:"reset",level:2},{value:"devContext",id:"devcontext",level:2},{value:"getDevContext",id:"getdevcontext",level:2},{value:"newTournamentRecord",id:"newtournamentrecord",level:2},{value:"setState",id:"setstate",level:2},{value:"setTournamentId",id:"settournamentid",level:2},{value:"getTournamentId",id:"gettournamentid",level:2},{value:"setTournamentRecord",id:"settournamentrecord",level:2},{value:"removeTournamentRecord",id:"removetournamentrecord",level:2},{value:"removeUnlinkedTournamentRecords",id:"removeunlinkedtournamentrecords",level:2},{value:"version",id:"version",level:2}],c={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"importmethods"},"importMethods"),(0,o.kt)("p",null,"Imports methods into shared factory state."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type MethodsObject = {\n  { [key]: function | MethodObject}\n}\n\nengine.importMethods(methods: MethodsObject, traverse: boolean | string[], maxDepth: number, global?: boolean);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"gettournament"},"getTournament"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.getTournament(params?)\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"getstate"},"getState"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.getState = (params?) =>\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"reset"},"reset"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.reset();\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"devcontext"},"devContext"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.devContex(contextCriteria);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"getdevcontext"},"getDevContext"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.getDevContext(contextCriteria);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"newtournamentrecord"},"newTournamentRecord"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.newTournamentRecord(params);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"setstate"},"setState"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/engines/global-state#setstate"},"Global State")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.setState(tournamentRecords, deepCopyOption, deepCopyAttributes);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"settournamentid"},"setTournamentId"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.setTournamentId(tournamentId);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"gettournamentid"},"getTournamentId"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.getTournamentId();\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"settournamentrecord"},"setTournamentRecord"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.setTournamentRecord();\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"removetournamentrecord"},"removeTournamentRecord"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.removeTournamentRecord(tournamentId);\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"removeunlinkedtournamentrecords"},"removeUnlinkedTournamentRecords"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"engine.removeUnlinkedTournamentRecords();\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"version"},"version"),(0,o.kt)("p",null,"Returns NPM package version. Can be used in configurations that utilize Competition Factory engines on both client and server to ensure equivalency."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const version = engine.version();\n")),(0,o.kt)("hr",null))}m.isMDXComponent=!0}}]);