"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3706],{9521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=t(1527),r=t(7942);const s={title:"Global State"},a=void 0,c={id:"concepts/globalState",title:"Global State",description:"Engines share state",source:"@site/docs/concepts/globalState.mdx",sourceDirName:"concepts",slug:"/concepts/globalState",permalink:"/tods-competition-factory/docs/concepts/globalState",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Global State"},sidebar:"docs",previous:{title:"Draw Generation",permalink:"/tods-competition-factory/docs/concepts/draw-generation"},next:{title:"Introduction to Policies",permalink:"/tods-competition-factory/docs/concepts/policies"}},i={},l=[{value:"Engines share state",id:"engines-share-state",level:2},{value:"Synchronous and Asynchronous",id:"synchronous-and-asynchronous",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.ah)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"engines-share-state",children:"Engines share state"}),"\n",(0,o.jsxs)(n.p,{children:["Except in cases where ",(0,o.jsx)(n.code,{children:"tournamentEngine"})," is used to generate a ",(0,o.jsx)(n.code,{children:"tournamentRecord"})," from scratch,\nit is necessary to first call a ",(0,o.jsx)(n.code,{children:".setState()"})," engine method."]}),"\n",(0,o.jsxs)(n.p,{children:["Setting ",(0,o.jsx)(n.code,{children:"tournamentEngine"})," state adds a tournamentRecord to global state, which makes it available to ",(0,o.jsx)(n.code,{children:"competitionEngine"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"tournamentEngine.setState(tournamentRecord);\nconst { tournamentRecords } = competitionEngine.getState();\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If multiple tournamentRecords are added to ",(0,o.jsx)(n.code,{children:"competitionEngine"})," state,\n",(0,o.jsx)(n.code,{children:"tournamentEngine"})," can point to a specific tournamentRecord by setting ",(0,o.jsx)(n.code,{children:"tournamentId"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"competitionEngine.setState(tournamentRecords);\ntournamentEngine.setTournamentId(tournamentId);\nconst { tournamentRecord } = tournamentEngine.getState();\n"})}),"\n",(0,o.jsxs)(n.p,{children:["When a single tournamentRecord is added via ",(0,o.jsx)(n.code,{children:"competitionEngine"}),", ",(0,o.jsx)(n.code,{children:"tournamentId"})," is set automatically."]}),"\n",(0,o.jsx)(n.h2,{id:"synchronous-and-asynchronous",children:"Synchronous and Asynchronous"}),"\n",(0,o.jsxs)(n.p,{children:["Competition Factory engines share a global state which is by default ",(0,o.jsx)(n.strong,{children:"synchronous"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"/sr/global/examples"})," there is an example of an ",(0,o.jsx)(n.strong,{children:"asynchronous"})," global state provider which can be copied into projects,\ntypically nodejs servers, which require asynchronous processing."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import asyncGlobalState from '../src/global/examples/asyncGlobalState';\n\nsetStateProvider(asyncGlobalState);\nconst asyncTournamentEngine = tournamentEngineAsync();\nconst asyncCompetitionEngine = competitionEngineAsync();\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:'There is no need to define a "stateProvider" for synchronous use, but it is possible to provide an alternate implementation.'})})]})}function p(e={}){const{wrapper:n}={...(0,r.ah)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},7942:(e,n,t)=>{t.d(n,{ah:()=>l});var o=t(959);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),l=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),h=r,m=u["".concat(i,".").concat(h)]||u[h]||d[h]||s;return t?o.createElement(m,a(a({ref:n},p),{},{components:t})):o.createElement(m,a({ref:n},p))}));p.displayName="MDXCreateElement"}}]);