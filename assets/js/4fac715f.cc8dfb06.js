"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8812],{7942:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>u});var a=n(959);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),c=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):p(p({},e),t)),n},m=function(t){var e=c(t.components);return a.createElement(o.Provider,{value:e},t.children)},d="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,o=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),d=c(n),g=r,u=d["".concat(o,".").concat(g)]||d[g]||s[g]||i;return n?a.createElement(u,p(p({ref:e},m),{},{components:n})):a.createElement(u,p({ref:e},m))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,p=new Array(i);p[0]=g;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=t,l[d]="string"==typeof t?t:r,p[1]=l;for(var c=2;c<i;c++)p[c]=n[c];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3246:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>p,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(8957),r=(n(959),n(7942));const i={title:"Draw Engine"},p=void 0,l={unversionedId:"engines/draw-engine-overview",id:"engines/draw-engine-overview",title:"Draw Engine",description:"The drawEngine_** generates drawDefinitions and matchUp results, managing participant movement within and between structures. Participants, however, are not necessary for the operations performed by the drawEngine_, and reference to participantIds only occurs in two places:",source:"@site/docs/engines/draw-engine-overview.md",sourceDirName:"engines",slug:"/engines/draw-engine-overview",permalink:"/tods-competition-factory/docs/engines/draw-engine-overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Draw Engine"},sidebar:"docs",previous:{title:"tournamentEngine API",permalink:"/tods-competition-factory/docs/apis/tournament-engine-api"},next:{title:"drawEngine API",permalink:"/tods-competition-factory/docs/apis/draw-engine-api"}},o={},c=[{value:"Participant &quot;agnostic&quot;",id:"participant-agnostic",level:2},{value:"Changing matchUpStatus",id:"changing-matchupstatus",level:2},{value:"matchUpStatus effects",id:"matchupstatus-effects",level:2},{value:"Single structure effects",id:"single-structure-effects",level:2},{value:"Multi-structure effects",id:"multi-structure-effects",level:2}],m={toc:c},d="wrapper";function s(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"drawEngine"))," generates drawDefinitions and matchUp results, managing participant movement within and between structures. Participants, however, are not necessary for the operations performed by the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"drawEngine")),", and reference to ",(0,r.kt)("inlineCode",{parentName:"p"},"participantIds")," only occurs in two places:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"drawDefinition.entries")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"drawDefinition.structures[#].positionAssignments"))),(0,r.kt)("h2",{id:"participant-agnostic"},'Participant "agnostic"'),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"drawEngine")),' is "participant agnostic", and doesn\'t know or care whether the participants moving through the ',(0,r.kt)("inlineCode",{parentName:"p"},"structures")," of a draw are ",(0,r.kt)("inlineCode",{parentName:"p"},"participantType")," INDIVIDUAL, PAIR or TEAM."),(0,r.kt)("p",null,"The logic governing participant movements between ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUps")," within ",(0,r.kt)("inlineCode",{parentName:"p"},"structures")," requires only ",(0,r.kt)("inlineCode",{parentName:"p"},"drawPositions"),"; ",(0,r.kt)("inlineCode",{parentName:"p"},"positionAssignments")," are used when requesting ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUps"),' with "context" to add ',(0,r.kt)("inlineCode",{parentName:"p"},"sides")," which include ",(0,r.kt)("inlineCode",{parentName:"p"},"participants"),"."),(0,r.kt)("h2",{id:"changing-matchupstatus"},"Changing matchUpStatus"),(0,r.kt)("p",null,"Changing the ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUpStatus")," of a ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUp")," may affect other ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUps")," across the structures that make up a draw."),(0,r.kt)("p",null,"Any attempt to change from a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"directing"))," to a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"non-directing"))," ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUpStatus"),", or vice-versa, causes the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"drawEngine"))," to check the validity of the change and, if valid, to modify all affected ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUps"),"."),(0,r.kt)("h2",{id:"matchupstatus-effects"},"matchUpStatus effects"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"matchUpStatus")),(0,r.kt)("th",{parentName:"tr",align:"center"},"Completed"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Directing"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Active"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Upcoming"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BYE"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RETIRED"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEFAULTED"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"COMPLETED"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WALKOVER"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE_DEFAULT"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"-"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE_WALKOVER"),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"-"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"INCOMPLETE"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"IN_PROGRESS"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SUSPENDED"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"x"),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TO_BE_PLAYED"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"x")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NOT_PLAYED"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"x")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CANCELLED"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ABANDONED"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEAD_RUBBER"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})))),(0,r.kt)("h2",{id:"single-structure-effects"},"Single structure effects"),(0,r.kt)("p",null,"If the effects of a change to a ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUpStatus")," are limited to a single structure, the only changes necessary are that ",(0,r.kt)("inlineCode",{parentName:"p"},"drawPositions")," of relevant ",(0,r.kt)("inlineCode",{parentName:"p"},"matchUps")," be modified to reflect participant movements across rounds."),(0,r.kt)("h2",{id:"multi-structure-effects"},"Multi-structure effects"),(0,r.kt)("p",null,"When there are multiple structures in a draw, such as COMPASS or DOUBLE ELIMINATION draws, then losers (and sometimes winners) can move across structures. For instance a first round loser in an EAST structure will move into the first round of the WEST structure. When this happens the ",(0,r.kt)("inlineCode",{parentName:"p"},"positionAssignments")," for the target structure must be updated to map the ",(0,r.kt)("inlineCode",{parentName:"p"},"participantId")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"drawPosition")," where they have been assigned."))}s.isMDXComponent=!0}}]);