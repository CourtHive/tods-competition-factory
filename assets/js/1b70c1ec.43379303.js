(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,d=u["".concat(o,".").concat(m)]||u[m]||b[m]||c;return n?r.a.createElement(d,s(s({ref:t},p),{},{components:n})):r.a.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<c;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),r=(n(0),n(101));const c={title:"Scale Items"},o={unversionedId:"concepts/scaleItems",id:"concepts/scaleItems",isDocsHomePage:!1,title:"Scale Items",description:"scaleItems capture participant RANKING, RATING and SEEDING values. They are attached to participants as Time Items.",source:"@site/docs/concepts/scaleItems.md",slug:"/concepts/scaleItems",permalink:"/tods-competition-factory/docs/concepts/scaleItems",version:"current",sidebar:"docs",previous:{title:"Time Items",permalink:"/tods-competition-factory/docs/concepts/timeItems"},next:{title:"MatchUp Formats",permalink:"/tods-competition-factory/docs/concepts/matchUpFormat"}},s=[],i={toc:s};function p({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},i,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"scaleItems")," capture participant RANKING, RATING and SEEDING values. They are attached to ",Object(r.b)("inlineCode",{parentName:"p"},"participants")," as ",Object(r.b)("a",{parentName:"p",href:"./timeItems"},"Time Items"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"const scaleItem = {\n  scaleValue: 8.3, // can be an integer, float or an object (see accessor below)\n  scaleName: 'WTN', // an arbitrary name, can be organization specific, e.g. 'NTRP' or 'UTR'\n  scaleType: RATING, //  RANKING, RATING, or SEEDING\n  eventType: SINGLES, // SINGLES, DOUBLES, or TEAM\n  scaleDate: '2020-06-06', // Ranking, Rating or Seeding date\n};\n\ntournamentEngine.setParticipantScaleItem({\n  participantId,\n  scaleItem,\n});\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"scaleAttributes")," is an object with attribute values used to retrieve targetd ",Object(r.b)("strong",{parentName:"p"},"scaleItems"),". The ",Object(r.b)("strong",{parentName:"p"},"scaleValue")," with the latest date is returned."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"const scaleAttributes = {\n  scaleType: RATING,\n  eventType: SINGLES,\n  scaleName: 'WTN',\n};\nconst { scaleItem } = tournamentEngine.getParticipantScaleItem({\n  participantId,\n  scaleAttributes,\n});\n")),Object(r.b)("p",null,"When ",Object(r.b)("strong",{parentName:"p"},"scaleValues")," are objects, ",Object(r.b)("strong",{parentName:"p"},"scaleAttributes")," may include an ",Object(r.b)("strong",{parentName:"p"},"accessor")," describing an attribute path to a nested value."),Object(r.b)("p",null,"See ",Object(r.b)("a",{parentName:"p",href:"../policies/accessors"},"Accessors"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"// to access the value of a particular attribute...\nconst scaleValue = {\n  ntrpRating: 4.5\n  ratingYear: '2020',\n  ustaRatingType: 'C'\n};\n\n// provide an \"accessor\" describing the attribute path to the nested value in the scaleValue.\nconst scaleAttributes = {\n  scaleType: RATING,\n  eventType: DOUBLES,\n  scaleName: 'NTRP',\n  accessor: 'ntrpRating',\n};\n")))}p.isMDXComponent=!0}}]);