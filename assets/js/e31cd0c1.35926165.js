"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4628],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var m=r.createContext({}),c=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(m.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(t),d=o,g=l["".concat(m,".").concat(d)]||l[d]||s[d]||a;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=l;var p={};for(var m in n)hasOwnProperty.call(n,m)&&(p[m]=n[m]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},5587:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={title:"Tournament Engine"},i=void 0,p={unversionedId:"engines/tournament-engine-overview",id:"engines/tournament-engine-overview",title:"Tournament Engine",description:"tournamentEngine operates on a complete tournament object, or tournamentRecord.",source:"@site/docs/engines/tournament-engine-overview.mdx",sourceDirName:"engines",slug:"/engines/tournament-engine-overview",permalink:"/CourtHive/tods-competition-factory/docs/engines/tournament-engine-overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Tournament Engine"},sidebar:"docs",previous:{title:"competitionEngine API",permalink:"/CourtHive/tods-competition-factory/docs/apis/competition-engine-api"},next:{title:"tournamentEngine API",permalink:"/CourtHive/tods-competition-factory/docs/apis/tournament-engine-api"}},m={},c=[],u={toc:c};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"tournamentEngine")," operates on a complete tournament object, or ",(0,o.kt)("inlineCode",{parentName:"p"},"tournamentRecord"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { tournamentEngine } from 'tods-competition-factory';\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tournamentEngine")," is a state machine that performs mutations on a ",(0,o.kt)("inlineCode",{parentName:"p"},"tournamentRecord"),", which can either be loaded into state or created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"tournamentEngine.newTournamentRecord({ tournamentName: 'New Tournament' });\n// -- or ---\ntournamentEngine.setState(tournamentRecord);\n")),(0,o.kt)("p",null,"All tournamentEngine methods which make a mutation return either ",(0,o.kt)("inlineCode",{parentName:"p"},"{ success: true }")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"{ error }")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Multiple tournamentRecords can be loaded into ",(0,o.kt)("inlineCode",{parentName:"p"},"competitionEngine"),"."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"tournamentEngine")," can be pointed to different tournamentRecords in the shared state."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"tournamentEngine.setTournamentId(tournamentId);\n"))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To operate on a tournamentRecord without loading it into state, it is possible to pass it as a parameter to any engine method:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"tournamentEngine.getTournamentParticipants({\n  sandboxTournament: tournamentRecord,\n});\n"))))}s.isMDXComponent=!0}}]);