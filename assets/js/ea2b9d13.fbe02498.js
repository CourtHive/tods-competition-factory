(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[999],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,y=d["".concat(p,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9402:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return l}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],c={title:"Subscriptions"},p={unversionedId:"concepts/subscriptions",id:"concepts/subscriptions",isDocsHomePage:!1,title:"Subscriptions",description:"Subscriptions enable external methods to be called when certain events occur while the Competition Factory engines are mutating a tournament document.",source:"@site/docs/concepts/subscriptions.md",sourceDirName:"concepts",slug:"/concepts/subscriptions",permalink:"/tods-competition-factory/docs/concepts/subscriptions",version:"current",frontMatter:{title:"Subscriptions"},sidebar:"docs",previous:{title:"matchUpFormat Codes",permalink:"/tods-competition-factory/docs/concepts/matchUpFormat"},next:{title:"Generating Tournaments",permalink:"/tods-competition-factory/docs/engines/mocks-engine-examples"}},s=[],u={toc:s};function l(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Subscriptions enable external methods to be called when certain events occur while the Competition Factory engines are mutating a tournament document."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const subscriptions = {\n  audit: (payload) => {}, // payload = [{ action: '', payload: {} }]\n\n  addMatchUps: (payload) => {}, // payload = { matchUps }\n  deletedMatchUpIds: (payload) => {}, // payload = { matchUpIds }\n  modifyMatchUp: (payload) => {}, // payload = { matchUp }\n\n  publishEvent: (payload) => (), // payload = { eventData }\n  unPublishEvent: (payload) => (), // payload = { eventId }\n\n  addVenue: (payload) => (), // payload { venue }\n  modifyVenue: (payload) => (), // payload { venue }\n  deleteVenue: (payload) => (), // payload { venueId }\n\n  addParticipants: (payload) => () // payload { participants }\n  modifyParticipants: (payload) => () // payload { participants }\n  deleteParticipants: (payload) => () // payload { participantIds }\n};\n")),(0,a.kt)("p",null,"Subscriptions can be defined for the following engines."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"drawEngine.setSubscriptions(subscriptions);\ntournamentEngine.setSubscriptions(subscriptions);\ncompetitionEngine.setSubscriptions(subscriptions);\n")))}l.isMDXComponent=!0}}]);