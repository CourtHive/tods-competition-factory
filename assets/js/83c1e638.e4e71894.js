"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4647],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=m(n),d=o,f=u["".concat(p,".").concat(d)]||u[d]||l[d]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4103:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(7462),o=(n(7294),n(4137));const i={title:"Competition Engine"},a=void 0,c={unversionedId:"engines/competition-engine-overview",id:"engines/competition-engine-overview",title:"Competition Engine",description:"competitionEngine operates on a multiple tournament object, or tournamentRecords.",source:"@site/docs/engines/competition-engine-overview.md",sourceDirName:"engines",slug:"/engines/competition-engine-overview",permalink:"/tods-competition-factory/docs/engines/competition-engine-overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Competition Engine"},sidebar:"docs",previous:{title:"Examples",permalink:"/tods-competition-factory/docs/engines/mocks-engine-examples"},next:{title:"competitionEngine API",permalink:"/tods-competition-factory/docs/apis/competition-engine-api"}},p={},m=[],s={toc:m};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"competitionEngine")," operates on a multiple tournament object, or ",(0,o.kt)("inlineCode",{parentName:"p"},"tournamentRecords"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { competitionEngine } from 'tods-competition-factory';\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"competitionEngine")," is a state machine that performs mutations across multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"tournamentRecords"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"competitionEngine.setState(tournamentRecord); // a single tournamentRecord\ncompetitionEngine.setState(tournamentRecords); // an object containing multiple tournamentRecords { [tournamentId]: tournamentRecord }\ncompetitionEngine.setState([tournamentRecord]); // an array of tournamentRecords\n")),(0,o.kt)("p",null,"All tournamentEngine methods which make a mutation return either ",(0,o.kt)("inlineCode",{parentName:"p"},"{ success: true }")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"{ error }")))}l.isMDXComponent=!0}}]);