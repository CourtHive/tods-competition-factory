"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1059],{3805:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var r=n(758);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),h=i,g=d["".concat(l,".").concat(h)]||d[h]||u[h]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(2232),i=(n(758),n(3805));const a={title:"Publishing"},o=void 0,s={unversionedId:"concepts/publishing",id:"concepts/publishing",title:"Publishing",description:"Overview",source:"@site/docs/concepts/publishing.md",sourceDirName:"concepts",slug:"/concepts/publishing",permalink:"/tods-competition-factory/docs/concepts/publishing",draft:!1,tags:[],version:"current",frontMatter:{title:"Publishing"},sidebar:"docs",previous:{title:"Conflict Reporting",permalink:"/tods-competition-factory/docs/concepts/scheduling-conflicts"},next:{title:"State Engines",permalink:"/tods-competition-factory/docs/engines/state-engines"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Event draws",id:"event-draws",level:2},{value:"Scheduled matchUps",id:"scheduled-matchups",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.yg)(d,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"overview"},"Overview"),(0,i.yg)("p",null,"Publishing is both a mechanism for controlling what information is available for public display and a means of triggering a notification to subscribers of various publishing-related topics."),(0,i.yg)("h2",{id:"event-draws"},"Event draws"),(0,i.yg)("p",null,"Control of public display of draw structures is provided by ",(0,i.yg)("a",{parentName:"p",href:"/docs/governors/publishing-governor#publishevent"},"engine.publishEvent"),"; when this method is called a ",(0,i.yg)("inlineCode",{parentName:"p"},"timeItem")," is attached to an event which directs filtering of draws and structures within draws and a notification is pushed to subscribers of the PUBLISH_EVENT topic."),(0,i.yg)("p",null,"The methods ",(0,i.yg)("a",{parentName:"p",href:"/tods-competition-factory/docs/governors/query-governor#geteventdata"},"engine.getEventData")," and ",(0,i.yg)("a",{parentName:"p",href:"/docs/governors/query-governor#competitionschedulematchups"},"engine.competitionScheduleMatchUps")," utilize the PUBLISH.STATUS ",(0,i.yg)("inlineCode",{parentName:"p"},"timeItem")," values when passed the parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"{ usePublishState: true }")," to filter the data they return."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"// publish all draws containted within event specified by eventId\nengine.publishEvent({ eventId });\n\n// publish specified drawId\nengine.publishEvent({\n  drawDetails: {\n    ['drawId']: { publishingDetail: { published: true } },\n  },\n  eventId,\n});\n\n// alternative shorthand for publishing drawId(s)\nengine.publishEvent({ eventId, drawIdsToAdd: ['drawId'] });\n\n// unpublish specified drawId(s)\nengine.publishEvent({ eventId, drawIdsToRemove: ['drawId'] });\n\n// publish only QUALIFYING stage of specified drawId\nengine.publishEvent({\n  drawDetails: { ['drawId']: { stagesToAdd: [QUALIFYING] } },\n  eventId,\n});\n\n// publish only first round of a specific structure\nresult = engine.publishEvent({\n  drawDetails: {\n    [drawId]: {\n      structureDetails: { [structureId]: { roundLimit: 1, published: true } },\n    },\n  },\n  eventId,\n});\n")),(0,i.yg)("h2",{id:"scheduled-matchups"},"Scheduled matchUps"),(0,i.yg)("p",null,"Control of public display of scheduled matchUps is provided by ",(0,i.yg)("a",{parentName:"p",href:"/docs/governors/publishing-governor#publishorderofplay"},"engine.publishOrderOfPlay"),"; when this method is called a ",(0,i.yg)("inlineCode",{parentName:"p"},"timeItem")," is attached to the tournament which directs filtering of matchUps and a notification is pushed to subscribers of the PUBLISH_ORDER_OF_PLAY topic."),(0,i.yg)("p",null,"The method ",(0,i.yg)("a",{parentName:"p",href:"/docs/governors/query-governor#competitionschedulematchups"},"engine.competitionScheduleMatchUps")," utilizes the PUBLISH.STATUS ",(0,i.yg)("inlineCode",{parentName:"p"},"timeItem")," values when passed the parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"{ usePublishState: true }")," to filter the matchUps which are returned in ",(0,i.yg)("inlineCode",{parentName:"p"},"dateMatchUps"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"engine.publishOrderOfPlay({\n  removePriorValues: true, // when true remove all previous timeItems related to publishing Order of Play\n  scheduledDates, // optional - if not provided will publish all scheduledDates\n  eventIds, // optional - if not provided will publish all eventIds\n});\n\nconst { dateMatchUps } = engine.competitionScheduleMatchUps({\n  usePublishState: true,\n});\n")))}u.isMDXComponent=!0}}]);