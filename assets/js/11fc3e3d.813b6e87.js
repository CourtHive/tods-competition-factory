"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7800],{9276:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(5271);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,c(c({ref:t},l),{},{components:n})):r.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(8957),a=(n(5271),n(9276));const o={title:"matchUp filtering"},c=void 0,i={unversionedId:"concepts/matchup-filtering",id:"concepts/matchup-filtering",title:"matchUp filtering",description:"Every public factory method which returns matchUps supports the matchUpFilters and contextFilters parameters.",source:"@site/docs/concepts/matchup-filtering.mdx",sourceDirName:"concepts",slug:"/concepts/matchup-filtering",permalink:"/tods-competition-factory/docs/concepts/matchup-filtering",draft:!1,tags:[],version:"current",frontMatter:{title:"matchUp filtering"},sidebar:"docs",previous:{title:"Context / Hydration",permalink:"/tods-competition-factory/docs/concepts/matchup-context"},next:{title:"tieMatchUps",permalink:"/tods-competition-factory/docs/concepts/tieMatchUp"}},p={},s=[{value:"matchUpFilters",id:"matchupfilters",level:2},{value:"contextFilters",id:"contextfilters",level:2},{value:"filterMatchUps",id:"filtermatchups",level:2}],l={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Every public factory method which returns ",(0,a.kt)("inlineCode",{parentName:"p"},"matchUps")," supports the ",(0,a.kt)("inlineCode",{parentName:"p"},"matchUpFilters")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"contextFilters")," parameters.\nThe underlying ",(0,a.kt)("inlineCode",{parentName:"p"},"filterMatchUps")," method is also exposed for direct use via the ",(0,a.kt)("inlineCode",{parentName:"p"},"matchUpsGovernor"),"."),(0,a.kt)("h2",{id:"matchupfilters"},"matchUpFilters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const matchUpFilters = {\n  matchUpFormat: 'SET3-S:6/TB7-F:TB10',\n  excludeMatchUpStatuses: [],\n  hasParticipantsCount: 2,\n  isCollectionMatchUp: [],\n  hasWinningSide: true,\n  isMatchUpTie: false,\n  matchUpStatuses: [],\n  matchUpFormats: [],\n  roundPositions: [],\n  collectionIds: [],\n  roundNumbers: [],\n  matchUpIds: [],\n  roundNames: [],\n\n  filterMatchUpTypes = true,\n  filterMatchUpIds = true,\n};\n")),(0,a.kt)("h2",{id:"contextfilters"},"contextFilters"),(0,a.kt)("p",null,"Only function on ",(0,a.kt)("inlineCode",{parentName:"p"},"matchUps")," which are ",(0,a.kt)("inlineCode",{parentName:"p"},"inContext"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const contextFilters = {\n  scheduledDate: '2024-04-01',\n  processContext: true,\n  readyToScore: true,\n  stageSequences: [],\n  scheduledDates: [],\n  participantIds: [],\n  tournamentIds: [],\n  matchUpTypes: [],\n  structureIds: [],\n  courtIds: [],\n  eventIds: [],\n  venueIds: [],\n  drawIds: [],\n  stages: [],\n};\n")),(0,a.kt)("h2",{id:"filtermatchups"},"filterMatchUps"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"matchUpFilters")," options listed above are direct attributes of ",(0,a.kt)("inlineCode",{parentName:"p"},"filterMatchUps"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { matchUpsGovernor } from 'tods-competition-factory';\nmatchUpsGovernor.filterMatchUps({ matchUps, ...matchUpFilters });\nmatchUpsGovernor.filterMatchUps({ matchUps, ...contextFilters, processContext: true });\n")))}m.isMDXComponent=!0}}]);