"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1491],{7942:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>v});var a=r(959);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=a.createContext({}),d=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(r),p=i,v=c["".concat(u,".").concat(p)]||c[p]||h[p]||n;return r?a.createElement(v,l(l({ref:t},s),{},{components:r})):a.createElement(v,l({ref:t},s))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,l=new Array(n);l[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<n;d++)l[d]=r[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8790:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var a=r(8957),i=(r(959),r(7942));const n={title:"utilities API"},l=void 0,o={unversionedId:"utilities/utilities-api",id:"utilities/utilities-api",title:"utilities API",description:"Convenience methods useful for projects working with the Competition Factory.",source:"@site/docs/utilities/utilities-api.md",sourceDirName:"utilities",slug:"/utilities/utilities-api",permalink:"/tods-competition-factory/docs/utilities/utilities-api",draft:!1,tags:[],version:"current",frontMatter:{title:"utilities API"},sidebar:"docs",previous:{title:"JSON2CSV",permalink:"/tods-competition-factory/docs/utilities/json-to-csv"}},u={},d=[{value:"addExtension",id:"addextension",level:2},{value:"calculateWinCriteria",id:"calculatewincriteria",level:2},{value:"chunkArray",id:"chunkarray",level:2},{value:"compareTieFormats",id:"comparetieformats",level:2},{value:"countValues",id:"countvalues",level:2},{value:"createMap",id:"createmap",level:2},{value:"dateRange",id:"daterange",level:2},{value:"dateTime",id:"datetime",level:2},{value:"definedAttributes",id:"definedattributes",level:2},{value:"dehydrateMatchUps",id:"dehydratematchups",level:2},{value:"extractAttributes",id:"extractattributes",level:2},{value:"findExtension",id:"findextension",level:2},{value:"generateHashCode",id:"generatehashcode",level:2},{value:"generateRange",id:"generaterange",level:2},{value:"generateScoreString",id:"generatescorestring",level:2},{value:"generateTimeCode",id:"generatetimecode",level:2},{value:"getCategoryAgeDetails",id:"getcategoryagedetails",level:2},{value:"getScaleValues",id:"getscalevalues",level:2},{value:"getTimeItem",id:"gettimeitem",level:2},{value:"hasAttributeValues",id:"hasattributevalues",level:2},{value:"instanceCount",id:"instancecount",level:2},{value:"intersection",id:"intersection",level:2},{value:"isAdHoc",id:"isadhoc",level:2},{value:"isConvertableInteger",id:"isconvertableinteger",level:2},{value:"isPowerOf2",id:"ispowerof2",level:2},{value:"JSON2CSV",id:"json2csv",level:2},{value:"makeDeepCopy",id:"makedeepcopy",level:2},{value:"matchUpSort",id:"matchupsort",level:2},{value:"nearestPowerOf2",id:"nearestpowerof2",level:2},{value:"nextPowerOf2",id:"nextpowerof2",level:2},{value:"overlap",id:"overlap",level:2},{value:"parseScoreString",id:"parsescorestring",level:2},{value:"randomMember",id:"randommember",level:2},{value:"randomPop",id:"randompop",level:2},{value:"roundRobinGroups",id:"roundrobingroups",level:2},{value:"scoreHasValue",id:"scorehasvalue",level:2},{value:"shuffleArray",id:"shufflearray",level:2},{value:"structureSort",id:"structuresort",level:2},{value:"tidyScore",id:"tidyscore",level:2},{value:"unique",id:"unique",level:2},{value:"UUID",id:"uuid",level:2},{value:"UUIDS",id:"uuids",level:2},{value:"validateTieFormat",id:"validatetieformat",level:2},{value:"visualizeScheduledMatchUps",id:"visualizescheduledmatchups",level:2}],s={toc:d},c="wrapper";function h(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Convenience methods useful for projects working with the Competition Factory."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"addextension"},"addExtension"),(0,i.kt)("p",null,"Adds extension entry to element ",(0,i.kt)("inlineCode",{parentName:"p"},".extensions")," attribute; error checking; creates attribute if necessary; overwrites existing value;"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"addExtension({\n  extension: { name, value },\n  creationTime, // boolean - add timeStamp\n  element: obj,\n});\n")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"calculatewincriteria"},"calculateWinCriteria"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"chunkarray"},"chunkArray"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"comparetieformats"},"compareTieFormats"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"countvalues"},"countValues"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"createmap"},"createMap"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"daterange"},"dateRange"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"datetime"},"dateTime"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"definedattributes"},"definedAttributes"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"dehydratematchups"},"dehydrateMatchUps"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"extractattributes"},"extractAttributes"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"findextension"},"findExtension"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { extension } = findExtension({ element, name });\n")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"generatehashcode"},"generateHashCode"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"generaterange"},"generateRange"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"generatescorestring"},"generateScoreString"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"generatetimecode"},"generateTimeCode"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"getcategoryagedetails"},"getCategoryAgeDetails"),(0,i.kt)("p",null,"Parses ",(0,i.kt)("inlineCode",{parentName:"p"},"ageCategoryCode")," to determine min/max eligible birthdates and min/max age. Category age/birthdate boundaries can be specified using other attributes.\nIf attributes are combined will sanity check correspondence and return an array of any encountered errors."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const {\n} = utilities.getCategoryAgeDetails({\n  consideredDate, // returns either supplied value or date when invoked\n  combinedAge, // boolean indicating that ageMax and ageMin are combined values\n  ageMaxDate,\n  ageMinDate,\n  ageMax,\n  ageMin,\n  errors,\n} = utilities.getCategoryAgeDetails({\n  consideredDate, // optional - date string 'YYYY-MM-DD'; defaults to current date\n  category: {\n    ageCategoryCode, // TODS code, e.g. 'U18', '18U', '18O', 'O18', '8O-U18', 'C50-70'\n    categoryName, // when no ageCategoryCode is provided, an attempt is made to find in categoryName\n    ageMaxDate, // latest/most recent date acceptable for eligibilty\n    ageMinDate, // earliest date acceptable for eligibility\n    ageMax, // maximum age acceptable for eligibility\n    ageMin, // minimum age acceptable for eligibility\n  },\n});\n")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"getscalevalues"},"getScaleValues"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"gettimeitem"},"getTimeItem"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"hasattributevalues"},"hasAttributeValues"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"instancecount"},"instanceCount"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"intersection"},"intersection"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"isadhoc"},"isAdHoc"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"isconvertableinteger"},"isConvertableInteger"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"ispowerof2"},"isPowerOf2"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"json2csv"},"JSON2CSV"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"makedeepcopy"},"makeDeepCopy"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"matchupsort"},"matchUpSort"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"nearestpowerof2"},"nearestPowerOf2"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"nextpowerof2"},"nextPowerOf2"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"overlap"},"overlap"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"parsescorestring"},"parseScoreString"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"randommember"},"randomMember"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"randompop"},"randomPop"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"roundrobingroups"},"roundRobinGroups"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"scorehasvalue"},"scoreHasValue"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"shufflearray"},"shuffleArray"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"structuresort"},"structureSort"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"tidyscore"},"tidyScore"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"unique"},"unique"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"uuid"},"UUID"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"uuids"},"UUIDS"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"validatetieformat"},"validateTieFormat"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"visualizescheduledmatchups"},"visualizeScheduledMatchUps"),(0,i.kt)("p",null,"Generate color-coded printout of matchUp schedule details"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"visualizeScheduledMatchUps({ scheduledMatchUps, showGlobalLogs: true });\n")))}h.isMDXComponent=!0}}]);