"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8782],{3805:(e,r,n)=>{n.d(r,{xA:()=>l,yg:()=>y});var t=n(758);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),p=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},l=function(e){var r=p(e.components);return t.createElement(c.Provider,{value:r},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=p(n),m=o,y=g["".concat(c,".").concat(m)]||g[m]||u[m]||a;return n?t.createElement(y,i(i({ref:r},l),{},{components:n})):t.createElement(y,i({ref:r},l))}));function y(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[g]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3275:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=n(2232),o=(n(758),n(3805));const a={title:"Governors"},i=void 0,s={unversionedId:"governors/governors-overview",id:"governors/governors-overview",title:"Governors",description:"Competition Factory functions are organized into governors which are responsible for specific areas of concern.",source:"@site/docs/governors/governors-overview.md",sourceDirName:"governors",slug:"/governors/governors-overview",permalink:"/tods-competition-factory/docs/governors/governors-overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Governors"},sidebar:"docs",previous:{title:"Global State",permalink:"/tods-competition-factory/docs/engines/global-state"},next:{title:"Competition Governor",permalink:"/tods-competition-factory/docs/governors/competition-governor"}},c={},p=[{value:"Importing Governors",id:"importing-governors",level:2}],l={toc:p},g="wrapper";function u(e){let{components:r,...n}=e;return(0,o.yg)(g,(0,t.A)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Competition Factory")," functions are organized into ",(0,o.yg)("em",{parentName:"p"},"governors")," which are responsible for specific areas of concern."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"competitionGovernor"),": functions which can operate across multiple tournaments"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"eventGoverrnor"),": functions which mutate events, drawDefinitions, structures and matchUps"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"generationGovernor"),": functions which generate e.g. drawDefinitions, playoff structures, mock tournamentRecords"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"matchUpFormatGoverrnor"),": parse and stringify methods for matchUpFormats"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"mocksGovernor"),": functions to generate data for testing"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"participantGovernor"),": functions to add, modify, delete tournament participants"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"policyGovernor"),": functions to attach and remove policies"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"publishingGovernor"),": functions to manage publish state of tournaments, events, draws, structures, seeding"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"queryGovernor"),": functions to query all aspects of tournament records"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"reportGovernor"),": reporting functions"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"scheduleGovernor"),": functions related to scheduling"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"scoreGovernor"),": functions to validate, manipulate, analyze matchUp scores"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"tournamentGovernor"),": functions which operate on tournament properties"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"utilitiesGovernor"),": utility functions"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"venueGovernor"),": functions to add and modify venues and courts")),(0,o.yg)("h2",{id:"importing-governors"},"Importing Governors"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { governors } from 'tods-competition-factory';\n")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"See ",(0,o.yg)("a",{parentName:"p",href:"/docs/engines/custom-engines"},"Custom Engines")," for an example of importing governors into engines.")))}u.isMDXComponent=!0}}]);