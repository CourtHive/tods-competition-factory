(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[953],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2402:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],s={title:"Draw Types"},u={unversionedId:"engines/draw-types",id:"engines/draw-types",isDocsHomePage:!1,title:"Draw Types",description:"Draw Types generated by the tournamentEngine.generateDrawDefinition() convenience method:",source:"@site/docs/engines/draw-types.md",sourceDirName:"engines",slug:"/engines/draw-types",permalink:"/tods-competition-factory/docs/engines/draw-types",version:"current",frontMatter:{title:"Draw Types"},sidebar:"docs",previous:{title:"Introduction",permalink:"/tods-competition-factory/docs/engines/draw-engine-introduction"},next:{title:"Draw Engine API",permalink:"/tods-competition-factory/docs/apis/draw-engine-api"}},l=[],c={toc:l};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Draw Types generated by the ",(0,a.kt)("inlineCode",{parentName:"p"},"tournamentEngine.generateDrawDefinition()")," convenience method:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"COMPASS")," - Includes up to 8 structures; ensures participants a minimum of 3 matchUps."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CURTIS")," - Includes 2 consolation structures, each fed by 2 main structure rounds, and a 3-4 playoff."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"DOUBLE_ELIMINATION")," - Main structure losers feed into consolation; consolation winner plays main structure winner."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FEED_IN_CHAMPIONSHIP_TO_QF")," - Main structure losers feed into consolation through the Quarterfinals."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FEED_IN_CHAMPIONSHIP_TO_R16")," - Main structure losers feed into consolation through the Round of 16."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FEED_IN_CHAMPIONSHIP_TO_SF")," - Main structure losers feed into consolation through the Semifinals."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FEED_IN_CHAMPIONSHIP")," - Main structure losers in every round feed into consolation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FEED_IN"),' - Also known as "staggered entry", participants feed into the main structure at specified rounds.'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FIRST_MATCH_LOSER_CONSOLATION")," - Losers feed into consolation whenever their first loss occurs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FIRST_ROUND_LOSER_CONSOLATION")," - Only first round losers feed into consolation structure."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"MODIFIED_FEED_IN_CHAMPIONSHIP")," - First and Second round losers are fed into consolation structure."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"OLYMPIC")," - Includes up to 4 structures; ensures participants a minimum of 2 matchUps."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"PLAY_OFF")," - All positions are played off; structures are added to ensure unique finishing positions."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ROUND_ROBINF")," - Participants divided into specified group sizes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ROUND_ROBIN_WITH_PLAYOFF")," - Includes auomated generattion of specified playoff structures."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"SINGLE_ELIMINATION")," - Standard knockout draw structure.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"tournamentEngine.addPlayoffStructures()")," adds additional structures to any generated draw."))}p.isMDXComponent=!0}}]);