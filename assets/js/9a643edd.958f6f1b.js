(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[965],{7018:function(e,a,t){"use strict";t.d(a,{Z:function(){return c}});var n=t(7294),i=t(126),o=JSON.parse('{"monokai":{"scheme":"monokai","author":"wimer hazenberg (http://www.monokai.nl)","base00":"#272822","base01":"#383830","base02":"#49483e","base03":"#75715e","base04":"#a59f85","base05":"#f8f8f2","base06":"#f5f4f1","base07":"#f9f8f5","base08":"#f92672","base09":"#fd971f","base0A":"#f4bf75","base0B":"#a6e22e","base0C":"#a1efe4","base0D":"#66d9ef","base0E":"#ae81ff","base0F":"#cc6633"},"summerfruit":{"scheme":"summerfruit","author":"christopher corley (http://cscorley.github.io/)","base00":"#151515","base01":"#202020","base02":"#303030","base03":"#505050","base04":"#B0B0B0","base05":"#D0D0D0","base06":"#E0E0E0","base07":"#FFFFFF","base08":"#FF0086","base09":"#FD8900","base0A":"#ABA800","base0B":"#00C918","base0C":"#1faaaa","base0D":"#3777E6","base0E":"#AD00A1","base0F":"#cc6633"},"solarized":{"scheme":"solarized","author":"ethan schoonover (http://ethanschoonover.com/solarized)","base00":"#002b36","base01":"#073642","base02":"#586e75","base03":"#657b83","base04":"#839496","base05":"#93a1a1","base06":"#eee8d5","base07":"#fdf6e3","base08":"#dc322f","base09":"#cb4b16","base0A":"#b58900","base0B":"#859900","base0C":"#2aa198","base0D":"#268bd2","base0E":"#6c71c4","base0F":"#d33682"}}'),r=function(e,a,t){var n=e.style;return{style:Object.assign({},n,{color:Number.isNaN(t[0])||parseInt(t,10)%2?n.color:"#33F"})}},d=function(e,a,t){var n=e.style;return{style:Object.assign({},n,{fontWeight:t?"bold":n.textTransform})}},s=function(e,a){var t=e.style;return{style:Object.assign({},t,{border:"Boolean"===a?"1px solid #DD3333":t.border,borderRadius:"Boolean"===a?3:t.borderRadius})}},l=function(e){return n.createElement("span",null,e)},m=function(e){return"string"==typeof e&&e.length>40?e.slice(0,40)+"...":e},c=function(e){var a=e.data,t=e.root,c=void 0===t?"root":t,u=e.colorScheme,p=void 0===u?"summerfruit":u,h=e.invertTheme,f=void 0===h||h,b=e.hideRoot,g=void 0!==b&&b,N=e.expandRoot,v=void 0===N||N,k=e.expandToLevel,T=void 0===k?1:k;return n.createElement("div",{style:{marginBottom:"1em"}},n.createElement(i.ZP,{theme:{extend:o[p],value:s,valueLabel:r,nestedNodeLabel:d},valueRenderer:m,getItemString:l,data:a,keyPath:[c],invertTheme:f,hideRoot:g,shouldExpandNode:function(e,a,t){return!!v&&(t<T||void 0)}}))}},1494:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return h},frontMatter:function(){return m},metadata:function(){return c},toc:function(){return u}});var n=t(2122),i=t(9756),o=(t(7294),t(3905)),r=t(7018),d=JSON.parse('[{"scheduleDate":"2020-04-30","venues":[{"venueId":"a37dfa4f-e6a0-4ebd-bdbd-d22c8870bfd5","rounds":[{"id":"11d05713-535f-4d4b-b52b-13a36398a9d9-bdea1fe3-ab3b-4528-ab38-fbfd27469bc6","drawId":"48f71377-e8dc-4af3-8b44-52a29efa6a1e","eventId":"F75AEAA6-58FE-4310-A8EE-E3DFA373B206","eventName":"U18 Girls Singles","roundName":"R32","roundNumber":1,"roundPositions":[1,2,3,4,5,6,7,8],"structureId":"11d05713-535f-4d4b-b52b-13a36398a9d9","tournamentId":"dbc5b3d2-c6ab-45d2-ae88-5f3745990647","sortOrder":1},{"id":"11d05713-535f-4d4b-b52b-13a36398a9d9-16035215-ca57-4722-9de5-5af82c3b234c","drawId":"48f71377-e8dc-4af3-8b44-52a29efa6a1e","eventId":"F75AEAA6-58FE-4310-A8EE-E3DFA373B206","eventName":"U18 Girls Singles","roundName":"R16","roundNumber":2,"structureId":"11d05713-535f-4d4b-b52b-13a36398a9d9","tournamentId":"dbc5b3d2-c6ab-45d2-ae88-5f3745990647","sortOrder":2}]}]},{"scheduleDate":"2020-05-01","venues":[{"venueId":"a37dfa4f-e6a0-4ebd-bdbd-d22c8870bfd5","rounds":[{"id":"46a5aed3-2f11-4db4-83fb-9da5ffa6156e-1c78036f-cd89-45d0-8d07-1c390580fdea","drawId":"01b5116e-b1d4-48b3-8b3f-8438a5350a59","eventId":"6F15E022-A6B7-4117-AA81-B3FE089FAD72","eventName":"U18 Boys Doubles","roundName":"E-R16","roundNumber":1,"structureId":"46a5aed3-2f11-4db4-83fb-9da5ffa6156e","tournamentId":"dbc5b3d2-c6ab-45d2-ae88-5f3745990647"},{"id":"46a5aed3-2f11-4db4-83fb-9da5ffa6156e-b3ff539e-8967-4fb9-b954-797b13546acb","drawId":"01b5116e-b1d4-48b3-8b3f-8438a5350a59","eventId":"6F15E022-A6B7-4117-AA81-B3FE089FAD72","eventName":"U18 Boys Doubles","roundName":"E-QF","roundNumber":2,"structureId":"46a5aed3-2f11-4db4-83fb-9da5ffa6156e","tournamentId":"dbc5b3d2-c6ab-45d2-ae88-5f3745990647"}]}]}]'),s=JSON.parse('{"defaultTimes":{"averageTimes":[{"categoryNames":[],"minutes":{"default":90}}],"recoveryTimes":[{"minutes":{"DOUBLES":30,"default":60}}]},"defaultDailyLimits":{"SINGLES":2,"DOUBLES":2,"total":3},"matchUpAverageTimes":[{"matchUpFormatCodes":["SET3-S:6/TB7"],"averageTimes":[{"categoryTypes":["JUNIOR"],"minutes":{"default":137}},{"categoryTypes":["ADULT","WHEELCHAIR"],"minutes":{"default":120}}]},{"matchUpFormatCodes":["SET3-S:6/TB7-F:TB10"],"averageTimes":[{"categoryNames":[],"minutes":{"default":90}},{"categoryTypes":["ADULT"],"minutes":{"default":90}}]},{"matchUpFormatCodes":["SET3-S:6/TB7-F:TB7"],"averageTimes":[{"categoryNames":[],"minutes":{"default":70}}]},{"matchUpFormatCodes":["SET3-S:4/TB7"],"averageTimes":[{"categoryNames":[],"minutes":{"default":60}}]},{"matchUpFormatCodes":["SET3-S:4/TB7-F:TB7"],"averageTimes":[{"categoryNames":[],"minutes":{"default":55}}]},{"matchUpFormatCodes":["SET3-S:4/TB7-F:TB7"],"averageTimes":[{"categoryNames":[],"minutes":{"default":50}}]},{"matchUpFormatCodes":["SET3-S:4/TB5@3"],"averageTimes":[{"categoryNames":[],"minutes":{"default":45}}]},{"matchUpFormatCodes":["SET1-S:8/TB7"],"averageTimes":[{"categoryNames":[],"minutes":{"default":40}}]},{"matchUpFormatCodes":["SET1-S:6/TB7"],"averageTimes":[{"categoryNames":[],"minutes":{"default":30}}]},{"matchUpFormatCodes":["SET1-S:4/TB7","SET1-S:4/TB5@3","SET3-S:TB10","SET1-S:T20"],"averageTimes":[{"categoryNames":[],"minutes":{"default":20}}]},{"matchUpFormatCodes":["SET1-S:TB10"],"averageTimes":[{"categoryNames":[],"minutes":{"default":10}}]}],"matchUpRecoveryTimes":[{"matchUpFormatCodes":["SET3-S:6/TB7"],"recoveryTimes":[{"categoryNames":[],"minutes":{"default":60,"DOUBLES":30}}]},{"averageTimes":{"greaterThan":29,"lessThan":70},"recoveryTimes":[{"categoryNames":[],"minutes":{"default":30}}]},{"averageTimes":{"lessThan":30},"recoveryTimes":[{"categoryNames":[],"minutes":{"default":15,"DOUBLES":15}}]}],"matchUpDailyLimits":[{"matchUpFormatCodes":[],"limits":[{"categoryNames":[],"categoryTypes":[],"matchesCombinations":[{"SINGLES":{"default":2},"DOUBLES":{"default":1}},{"SINGLES":{"default":1},"DOUBLES":{"default":2}}],"sets":{"total":9,"SINGLES":6,"DOUBLES":9}}]},{"matchUpFormatCodes":["S3-S:TB10"],"limits":[{"categoryNames":["12U"],"matchesCombinations":[{"SINGLES":{"default":2}},{"SINGLES":{"default":1},"DOUBLES":{"default":2}},{"DOUBLES":{"default":3}}],"sets":{"total":9,"DOUBLES":9,"SINGLES":6}}]}]}'),l=["components"],m={title:"Advanced Scheduling",slug:"/pseudocode/scheduling"},c={unversionedId:"pseudocode/scheduling",id:"pseudocode/scheduling",isDocsHomePage:!1,title:"Advanced Scheduling",description:"Iterative Garman scheduling",source:"@site/docs/pseudocode/scheduling.mdx",sourceDirName:"pseudocode",slug:"/pseudocode/scheduling",permalink:"/tods-competition-factory/docs/pseudocode/scheduling",version:"current",frontMatter:{title:"Advanced Scheduling",slug:"/pseudocode/scheduling"},sidebar:"docs",previous:{title:"Mocks Engine API",permalink:"/tods-competition-factory/docs/apis/mocks-engine-api"},next:{title:"Competition Engine API",permalink:"/tods-competition-factory/docs/apis/competition-engine-api"}},u=[{value:"Iterative Garman scheduling",id:"iterative-garman-scheduling",children:[]},{value:"schedulingProfile",id:"schedulingprofile",children:[]},{value:"Scheduling policy",id:"scheduling-policy",children:[]},{value:"Overriding policies",id:"overriding-policies",children:[]},{value:"Automated Scheduling",id:"automated-scheduling",children:[]},{value:"pseudocode",id:"pseudocode",children:[]}],p={toc:u};function h(e){var a=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"iterative-garman-scheduling"},"Iterative Garman scheduling"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"competitionEngine")," supports Garman scheduling of ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUps")," from multiple tournaments across shared ",(0,o.kt)("inlineCode",{parentName:"p"},"venues"),"."),(0,o.kt)("p",null,"The Garman formula calculates the times at which ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUps")," may be scheduled, taking into consideration court availability\nand average minutes per match, but it does not inherently support the ",(0,o.kt)("strong",{parentName:"p"},"average minutes")," per ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUp")," being ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"different")),"\nacross blocks of ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUps"),"."),(0,o.kt)("h2",{id:"schedulingprofile"},"schedulingProfile"),(0,o.kt)("p",null,"To support the use of the Garman formula for scheduling ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUps")," from different events,\n",(0,o.kt)("inlineCode",{parentName:"p"},"competitionEngine")," makes use of a ",(0,o.kt)("inlineCode",{parentName:"p"},"schedulingProfile")," to define the order of ",(0,o.kt)("inlineCode",{parentName:"p"},"rounds")," of structures within ",(0,o.kt)("inlineCode",{parentName:"p"},"drawDefinitions"),"\nto be scheduled on specific days, and then iteratively calls the Garman formula."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"schedulingProfile")," is an array of profiles for the ",(0,o.kt)("inlineCode",{parentName:"p"},"dates")," to be scheduled; it is stored as an ",(0,o.kt)("inlineCode",{parentName:"p"},"extension")," attached to the tournament record.\n",(0,o.kt)("inlineCode",{parentName:"p"},"competitionEngine")," provides convenience methods for creating and manipulting the ",(0,o.kt)("inlineCode",{parentName:"p"},"schedulingProfile"),", or it can be generated externally and attached\nvia ",(0,o.kt)("inlineCode",{parentName:"p"},"setSchedulingProfile()"),"."),(0,o.kt)(r.Z,{data:d,root:"schedulingProfile",colorScheme:"summerfruit",invertTheme:!0,mdxType:"RenderJSON"}),(0,o.kt)("h2",{id:"scheduling-policy"},"Scheduling policy"),(0,o.kt)("p",null,'A "Scheduling Policy" defines the average matchUp times and mandated recovery times for each ',(0,o.kt)("inlineCode",{parentName:"p"},"matchUpFormat"),",\nand sets limits on the number of matchUps that may be played per-player per-day."),(0,o.kt)(r.Z,{data:s,root:"scheduling",colorScheme:"summerfruit",invertTheme:!0,mdxType:"RenderJSON"}),(0,o.kt)("h2",{id:"overriding-policies"},"Overriding policies"),(0,o.kt)("p",null,"Average ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUpFormat")," times and recovery times can be defined, or established policies can be overridden"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// set averageTimes for a specific matchUpFormat\ncompetitionEngine.modifyMatchUpFormatTiming({\n  matchUpFormat: 'SET3-S:6/TB7',\n  averageTimes: [\n    {\n      categoryNames: ['U12', 'U14'],\n      minutes: { ['DOUBLES']: 110, default: 130 },\n    },\n    {\n      categoryNames: ['U16', 'U18'],\n      minutes: { ['DOUBLES']: 100, default: 120 },\n    },\n  ],\n  recoveryTimes: [\n    { categoryNames: [], minutes: { default: 15, ['DOUBLES']: 15 } },\n  ],\n});\n\n// set dailyLimits\ncompetitionEngine.setMatchUpDailyLimits({\n  dailyLimits: { SINGLES: 2, DOUBLES: 1, total: 3 },\n});\n")),(0,o.kt)("h2",{id:"automated-scheduling"},"Automated Scheduling"),(0,o.kt)("p",null,"Once the ",(0,o.kt)("inlineCode",{parentName:"p"},"schedulingProfile"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUpFormatTiming")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"dailyLimits")," have been defined, automated assignment of ",(0,o.kt)("strong",{parentName:"p"},"scheduleTimes")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"matchUps")," is straightforward."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"competitionEngine.scheduleProfileRounds({\n  scheduleDates, // optional array of dates to be scheduled\n});\n")),(0,o.kt)("h2",{id:"pseudocode"},"pseudocode"),(0,o.kt)("p",null,'Scheduling operates with an array of all competition matchUps "inContext".\nAfter building up a mapping of matchUpIds to scheduleTimes, the assignments are made.'),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Loop through ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleDates")," ..."),(0,o.kt)("li",{parentName:"ol"},"Loop through venues for current ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleDate")," ..."),(0,o.kt)("li",{parentName:"ol"},"Insure ",(0,o.kt)("inlineCode",{parentName:"li"},"rounds")," specified for ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleDate")," are sorted as specified"),(0,o.kt)("li",{parentName:"ol"},"Generate ordered array of ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUpIds")," derived from specified ",(0,o.kt)("inlineCode",{parentName:"li"},"rounds")),(0,o.kt)("li",{parentName:"ol"},"Group ordered ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUpIds")," by ",(0,o.kt)("strong",{parentName:"li"},"averageMatchUpMinutes|recoveryMinutes")),(0,o.kt)("li",{parentName:"ol"},"Loop through groups of ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUpIds")," ..."),(0,o.kt)("li",{parentName:"ol"},"Calculate Available scheduleTimes, considering court availability and already scheduled matchUps"),(0,o.kt)("li",{parentName:"ol"},"Construct per-participant hash tables of ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUps")," played and ",(0,o.kt)("inlineCode",{parentName:"li"},"timeAfterRecovery")),(0,o.kt)("li",{parentName:"ol"},"Filter out ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUps")," which are not appropriate for scheduling"),(0,o.kt)("li",{parentName:"ol"},"Filter out ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUps")," which include participants who have reached daily limits"),(0,o.kt)("li",{parentName:"ol"},"Loop through available ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleTimes")," and build up mapping of ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUpIds")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleTimes"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Defer scheduling of matchUps where ",(0,o.kt)("inlineCode",{parentName:"li"},"timeAfterRecovery")," has not been reached"),(0,o.kt)("li",{parentName:"ul"},"Defer scheduling of matchUps where ",(0,o.kt)("inlineCode",{parentName:"li"},"personRequests")," include ",(0,o.kt)("inlineCode",{parentName:"li"},"{ requestType: DO_NO_SCHEDULE }")," conflicts"))),(0,o.kt)("li",{parentName:"ol"},"Group ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUpIds")," by ",(0,o.kt)("strong",{parentName:"li"},"eventId|drawId|structureId")," and assign ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduleTimes")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"matchUps"))))}h.isMDXComponent=!0}}]);