"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2731],{3805:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>p});var r=t(758);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),g=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=g(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=g(t),m=o,p=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return t?r.createElement(p,l(l({ref:n},u),{},{components:t})):r.createElement(p,l({ref:n},u))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var g=2;g<a;g++)l[g]=t[g];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5583:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>g});var r=t(2232),o=(t(758),t(3805));const a={title:"Engine Methods"},l=void 0,i={unversionedId:"engines/engine-methods",id:"engines/engine-methods",title:"Engine Methods",description:"importMethods",source:"@site/docs/engines/engine-methods.md",sourceDirName:"engines",slug:"/engines/engine-methods",permalink:"/tods-competition-factory/docs/engines/engine-methods",draft:!1,tags:[],version:"current",frontMatter:{title:"Engine Methods"},sidebar:"docs",previous:{title:"State Engines",permalink:"/tods-competition-factory/docs/engines/state-engines"},next:{title:"Engine Logging",permalink:"/tods-competition-factory/docs/engines/engine-logging"}},s={},g=[{value:"importMethods",id:"importmethods",level:2},{value:"getTournament",id:"gettournament",level:2},{value:"getState",id:"getstate",level:2},{value:"reset",id:"reset",level:2},{value:"devContext",id:"devcontext",level:2},{value:"getDevContext",id:"getdevcontext",level:2},{value:"newTournamentRecord",id:"newtournamentrecord",level:2},{value:"setState",id:"setstate",level:2},{value:"setTournamentId",id:"settournamentid",level:2},{value:"getTournamentId",id:"gettournamentid",level:2},{value:"setTournamentRecord",id:"settournamentrecord",level:2},{value:"removeTournamentRecord",id:"removetournamentrecord",level:2},{value:"removeUnlinkedTournamentRecords",id:"removeunlinkedtournamentrecords",level:2},{value:"version",id:"version",level:2}],u={toc:g},c="wrapper";function d(e){let{components:n,...t}=e;return(0,o.yg)(c,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"importmethods"},"importMethods"),(0,o.yg)("p",null,"Imports methods into shared factory state."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"type MethodsObject = {\n  { [key]: function | MethodObject}\n}\n\nengine.importMethods(methods: MethodsObject, traverse: boolean | string[], maxDepth: number, global?: boolean);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"gettournament"},"getTournament"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.getTournament(params?)\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"getstate"},"getState"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.getState = (params?) =>\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"reset"},"reset"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.reset();\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"devcontext"},"devContext"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.devContex(contextCriteria);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"getdevcontext"},"getDevContext"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.getDevContext(contextCriteria);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"newtournamentrecord"},"newTournamentRecord"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.newTournamentRecord(params);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"setstate"},"setState"),(0,o.yg)("p",null,"See ",(0,o.yg)("a",{parentName:"p",href:"/docs/engines/global-state#setstate"},"Global State")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.setState(tournamentRecords, deepCopyOption, deepCopyAttributes);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"settournamentid"},"setTournamentId"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.setTournamentId(tournamentId);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"gettournamentid"},"getTournamentId"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.getTournamentId();\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"settournamentrecord"},"setTournamentRecord"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.setTournamentRecord();\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"removetournamentrecord"},"removeTournamentRecord"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.removeTournamentRecord(tournamentId);\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"removeunlinkedtournamentrecords"},"removeUnlinkedTournamentRecords"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"engine.removeUnlinkedTournamentRecords();\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"version"},"version"),(0,o.yg)("p",null,"Returns NPM package version. Can be used in configurations that utilize Competition Factory engines on both client and server to ensure equivalency."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const version = engine.version();\n")),(0,o.yg)("hr",null))}d.isMDXComponent=!0}}]);