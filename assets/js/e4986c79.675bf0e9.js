"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4182],{7942:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>p});var n=r(959);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),d=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(r),v=a,p=c["".concat(u,".").concat(v)]||c[v]||h[v]||l;return r?n.createElement(p,i(i({ref:t},s),{},{components:r})):n.createElement(p,i({ref:t},s))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=v;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var d=2;d<l;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},1171:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=r(8957),a=(r(959),r(7942));const l={title:"tools API"},i=void 0,o={unversionedId:"apis/tools-api",id:"apis/tools-api",title:"tools API",description:"Convenience methods useful for projects working with the Competition Factory.",source:"@site/docs/apis/tools-api.md",sourceDirName:"apis",slug:"/apis/tools-api",permalink:"/tods-competition-factory/docs/apis/tools-api",draft:!1,tags:[],version:"current",frontMatter:{title:"tools API"}},u={},d=[{value:"addExtension",id:"addextension",level:2},{value:"calculateWinCriteria",id:"calculatewincriteria",level:2},{value:"categoryCanContain",id:"categorycancontain",level:2},{value:"chunkArray",id:"chunkarray",level:2},{value:"compareTieFormats",id:"comparetieformats",level:2},{value:"countValues",id:"countvalues",level:2},{value:"createMap",id:"createmap",level:2},{value:"generateDateRange",id:"generatedaterange",level:2},{value:"dateTime",id:"datetime",level:2},{value:"definedAttributes",id:"definedattributes",level:2},{value:"dehydrateMatchUps",id:"dehydratematchups",level:2},{value:"extractAttributes",id:"extractattributes",level:2},{value:"findExtension",id:"findextension",level:2},{value:"generateHashCode",id:"generatehashcode",level:2},{value:"generateRange",id:"generaterange",level:2},{value:"generateScoreString",id:"generatescorestring",level:2},{value:"generateTimeCode",id:"generatetimecode",level:2},{value:"getScaleValues",id:"getscalevalues",level:2},{value:"getTimeItem",id:"gettimeitem",level:2},{value:"hasAttributeValues",id:"hasattributevalues",level:2},{value:"instanceCount",id:"instancecount",level:2},{value:"intersection",id:"intersection",level:2},{value:"isAdHoc",id:"isadhoc",level:2},{value:"isConvertableInteger",id:"isconvertableinteger",level:2},{value:"isPowerOf2",id:"ispowerof2",level:2},{value:"JSON2CSV",id:"json2csv",level:2},{value:"makeDeepCopy",id:"makedeepcopy",level:2},{value:"matchUpSort",id:"matchupsort",level:2},{value:"nearestPowerOf2",id:"nearestpowerof2",level:2},{value:"nextPowerOf2",id:"nextpowerof2",level:2},{value:"overlap",id:"overlap",level:2},{value:"parseScoreString",id:"parsescorestring",level:2},{value:"randomMember",id:"randommember",level:2},{value:"randomPop",id:"randompop",level:2},{value:"roundRobinGroups",id:"roundrobingroups",level:2},{value:"checkScoreHasValue",id:"checkscorehasvalue",level:2},{value:"shuffleArray",id:"shufflearray",level:2},{value:"structureSort",id:"structuresort",level:2},{value:"tidyScore",id:"tidyscore",level:2},{value:"tieFormatGenderValidityCheck",id:"tieformatgendervaliditycheck",level:2},{value:"unique",id:"unique",level:2},{value:"UUID",id:"uuid",level:2},{value:"UUIDS",id:"uuids",level:2},{value:"validateTieFormat",id:"validatetieformat",level:2},{value:"visualizeScheduledMatchUps",id:"visualizescheduledmatchups",level:2}],s={toc:d},c="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Convenience methods useful for projects working with the Competition Factory."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"addextension"},"addExtension"),(0,a.kt)("p",null,"Adds extension entry to element ",(0,a.kt)("inlineCode",{parentName:"p"},".extensions")," attribute; error checking; creates attribute if necessary; overwrites existing value;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"tools.addExtension({\n  extension: { name, value },\n  creationTime, // boolean - add timeStamp\n  element: obj,\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"calculatewincriteria"},"calculateWinCriteria"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"categorycancontain"},"categoryCanContain"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const {\n  invalidRatingRange,\n  invalidAgeMinDate,\n  invalidAgeMaxDate,\n  invalidBallType,\n  invalidAgeMax,\n  invalidAgeMin,\n  valid,\n} = tools.categoryCanContain({\n  childCategory: { ageCategoryCode: 'U16' },\n  category: { ageCategoryCode: 'U18' },\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"chunkarray"},"chunkArray"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"comparetieformats"},"compareTieFormats"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"countvalues"},"countValues"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"createmap"},"createMap"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatedaterange"},"generateDateRange"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"datetime"},"dateTime"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"definedattributes"},"definedAttributes"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"dehydratematchups"},"dehydrateMatchUps"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extractattributes"},"extractAttributes"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"findextension"},"findExtension"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { extension } = tools.findExtension({ element, name });\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatehashcode"},"generateHashCode"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generaterange"},"generateRange"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatescorestring"},"generateScoreString"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatetimecode"},"generateTimeCode"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"getscalevalues"},"getScaleValues"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"gettimeitem"},"getTimeItem"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"hasattributevalues"},"hasAttributeValues"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"instancecount"},"instanceCount"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"intersection"},"intersection"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"isadhoc"},"isAdHoc"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"isconvertableinteger"},"isConvertableInteger"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"ispowerof2"},"isPowerOf2"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"json2csv"},"JSON2CSV"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"makedeepcopy"},"makeDeepCopy"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"matchupsort"},"matchUpSort"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"nearestpowerof2"},"nearestPowerOf2"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"nextpowerof2"},"nextPowerOf2"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"overlap"},"overlap"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"parsescorestring"},"parseScoreString"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"randommember"},"randomMember"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"randompop"},"randomPop"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"roundrobingroups"},"roundRobinGroups"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"checkscorehasvalue"},"checkScoreHasValue"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"shufflearray"},"shuffleArray"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"structuresort"},"structureSort"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"tidyscore"},"tidyScore"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"tieformatgendervaliditycheck"},"tieFormatGenderValidityCheck"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { valid, error } = tools.tieFormatGenderValidityCheck({\n  referenceGender, // if not present then always returns { valid: true }\n  matchUpType, // optional - check whether matchUpType is valid for referenceGender\n  gender,\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"unique"},"unique"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"uuid"},"UUID"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"uuids"},"UUIDS"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"validatetieformat"},"validateTieFormat"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"visualizescheduledmatchups"},"visualizeScheduledMatchUps"),(0,a.kt)("p",null,"Generate color-coded printout of matchUp schedule details"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"tools.visualizeScheduledMatchUps({\n  showGlobalLogs: true,\n  scheduledMatchUps,\n});\n")))}h.isMDXComponent=!0}}]);