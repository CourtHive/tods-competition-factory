"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3654],{3805:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>d});var o=r(758);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(r),f=n,d=u["".concat(l,".").concat(f)]||u[f]||y[f]||i;return r?o.createElement(d,c(c({ref:t},p),{},{components:r})):o.createElement(d,c({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:n,c[1]=a;for(var s=2;s<i;s++)c[s]=r[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1790:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>y,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var o=r(2232),n=(r(758),r(3805));const i={title:"Progression Policy"},c=void 0,a={unversionedId:"policies/progressionPolicy",id:"policies/progressionPolicy",title:"Progression Policy",description:"",source:"@site/docs/policies/progressionPolicy.md",sourceDirName:"policies",slug:"/policies/progressionPolicy",permalink:"/tods-competition-factory/docs/policies/progressionPolicy",draft:!1,tags:[],version:"current",frontMatter:{title:"Progression Policy"},sidebar:"docs",previous:{title:"Feed Policy",permalink:"/tods-competition-factory/docs/policies/feedPolicy"},next:{title:"Voluntary Consolation",permalink:"/tods-competition-factory/docs/policies/consolationPolicy"}},l={},s=[],p={toc:s},u="wrapper";function y(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,o.A)({},p,r,{components:t,mdxType:"MDXLayout"}))}y.isMDXComponent=!0}}]);