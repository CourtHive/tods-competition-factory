"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3560],{7942:(t,n,e)=>{e.d(n,{Zo:()=>l,kt:()=>y});var o=e(959);function a(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,o)}return e}function i(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){a(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function s(t,n){if(null==t)return{};var e,o,a=function(t,n){if(null==t)return{};var e,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)e=r[o],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)e=r[o],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var p=o.createContext({}),c=function(t){var n=o.useContext(p),e=n;return t&&(e="function"==typeof t?t(n):i(i({},n),t)),e},l=function(t){var n=c(t.components);return o.createElement(p.Provider,{value:n},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var n=t.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(t,n){var e=t.components,a=t.mdxType,r=t.originalType,p=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=c(e),m=a,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||r;return e?o.createElement(y,i(i({ref:n},l),{},{components:e})):o.createElement(y,i({ref:n},l))}));function y(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var r=e.length,i=new Array(r);i[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=t,s[u]="string"==typeof t?t:a,i[1]=s;for(var c=2;c<r;c++)i[c]=e[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,e)}m.displayName="MDXCreateElement"},5921:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=e(8957),a=(e(959),e(7942));const r={title:"Subscriptions"},i=void 0,s={unversionedId:"engines/subscriptions",id:"engines/subscriptions",title:"Subscriptions",description:"Subscriptions enable external methods to be called when certain events occur while the Competition Factory engines are mutating a tournament document.",source:"@site/docs/engines/subscriptions.md",sourceDirName:"engines",slug:"/engines/subscriptions",permalink:"/tods-competition-factory/docs/engines/subscriptions",draft:!1,tags:[],version:"current",frontMatter:{title:"Subscriptions"},sidebar:"docs",previous:{title:"Mutation Engines",permalink:"/tods-competition-factory/docs/engines/mutation-engines"},next:{title:"Custom Engines",permalink:"/tods-competition-factory/docs/engines/custom-engines"}},p={},c=[],l={toc:c},u="wrapper";function d(t){let{components:n,...e}=t;return(0,a.kt)(u,(0,o.Z)({},l,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Subscriptions enable external methods to be called when certain events occur while the Competition Factory engines are mutating a tournament document."),(0,a.kt)("p",null,"The payload for each subscription is an array of objects, with each element of the array having been produced by an ",(0,a.kt)("inlineCode",{parentName:"p"},"addNotice")," statement within engine methods. Subscription methods are called ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"after"))," an engine method completes, not during execution."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"All engine methods may be passed the additional parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"{ delayNotify: true }"),", in which case subscription methods are ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"not"))," called until a subsequent engine method is invoked.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const subscriptions = {\n  [topicConstants.AUDIT]: (payload) => {},\n\n  [topicConstants.ADD_MATCHUPS]: (payload) => {},\n  [topicConstants.DELETED_MATCHUP_IDS]: (payload) => {},\n  [topicConstants.MODIFY_MATCHUP]: (payload) => {},\n\n  // factory will use generated or generate inContextMatchUp (for updating public site)\n  // this can be used on client but may not have all participantContext options\n  [topicConstants.UPDATE_INCONTEXT_MATCHUP]: (payload) => {},\n\n  [topicConstants.PUBLISH_EVENT]: (payload) => {},\n  [topicConstants.UNPUBLISH_EVENT]: (payload) => {},\n\n  [topicConstants.PUBLISH_EVENT_SEEDING]: (payload) => {},\n  [topicConstants.UNPUBLISH_EVENT_SEEDING]: (payload) => (),\n\n  [topicConstants.PUBLISH_ORDER_OF_PLAY]: (payload) => {},\n  [topicConstants.UNPUBLISH_ORDER_OF_PLAY]: (payload) => (),\n\n  [topicConstants.ADD_VENUE]: (payload) => {},\n  [topicConstants.MODIFY_VENUE]: (payload) => {},\n  [topicConstants.DELETE_VENUE]: (payload) => {},\n\n  [topicConstants.add_participants]: (payload) => {},\n  [topicConstants.MODIFY_PARTICIPANTS]: (payload) => {},\n  [topicConstants.DELETE_PARTICIPANTS]: (payload) => {},\n\n  [topicConstants.MODIFY_POSITION_ASSIGNMENTS]: (payload) => {},\n  [topicConstants.MODIFY_SEED_ASSIGNMENTS]: (payload) => {},\n\n  [topicConstants.ADD_DRAW_DEFINITION]: (payload) => {},\n  [topicConstants.MODIFY_DRAW_DEFINITION]: (payload) => {},\n  [topicConstants.DELETED_DRAW_IDS]: (payload) => {},\n\n  [topicConstants.MODIFY_TOURNAMENT_DETAIL]: (payload) => {},\n  [topicContants.ADD_SCALE_ITEMS]: (payload) => {},\n  [topicConstants.DATA_ISSUE]: (payload) => {},\n\n  // to notify of all mutations { methods, params }\n  [topicConstants.MUTATIONS]: (payload) => {},\n};\n")),(0,a.kt)("p",null,"Subscriptions are defined once for all engines."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { globalState: { setSubcriptions } } from 'tods-competition-factory';\n\nsetSubscriptions(subscriptions);\n")))}d.isMDXComponent=!0}}]);