"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2618],{6235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var r=n(1527),i=n(7942);const c={title:"Context / Hydration"},o=void 0,s={id:"concepts/context",title:"Context / Hydration",description:"When matchUps and tournamentParticipants are returned with { inContext: true }",source:"@site/docs/concepts/context.mdx",sourceDirName:"concepts",slug:"/concepts/context",permalink:"/tods-competition-factory/docs/concepts/context",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Context / Hydration"},sidebar:"docs",previous:{title:"Accessors",permalink:"/tods-competition-factory/docs/concepts/accessors"},next:{title:"Draw Generation",permalink:"/tods-competition-factory/docs/concepts/draw-generation"}},a={},d=[{value:"matchUps",id:"matchups",level:2},{value:"tournamentParticipants",id:"tournamentparticipants",level:2},{value:"Converted Extensions",id:"converted-extensions",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["When ",(0,r.jsx)(t.strong,{children:"matchUps"})," and ",(0,r.jsx)(t.strong,{children:"tournamentParticipants"})," are returned with ",(0,r.jsx)(t.code,{children:"{ inContext: true }"}),'\nthey will include contextual information that is not part of the TODS document node from which they originated; the process is also referred to as "hydration".']}),"\n",(0,r.jsxs)(t.p,{children:["Contextual information for ",(0,r.jsx)(t.code,{children:"matchUps"})," includes information about the ",(0,r.jsx)(t.code,{children:"structures, drawDefinitions"})," and ",(0,r.jsx)(t.code,{children:"events"})," within which they are embeded;\n",(0,r.jsx)(t.code,{children:"drawPositions"})," are resolved using ",(0,r.jsx)(t.code,{children:"positionAssignments"})," to the ",(0,r.jsx)(t.code,{children:"participants"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Contextual information for ",(0,r.jsx)(t.code,{children:"participants"})," can include ",(0,r.jsx)(t.code,{children:"events, drawDefinitions"})," and ",(0,r.jsx)(t.code,{children:"matchUps"})," in which each ",(0,r.jsx)(t.code,{children:"participant"})," appears,\nas well as ",(0,r.jsx)(t.code,{children:"ratings"})," and ",(0,r.jsx)(t.code,{children:"rankings"})," converted from ",(0,r.jsx)(t.code,{children:"timeItems"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Additional contextual information can be passed into methods for retrieving ",(0,r.jsx)(t.code,{children:"matchUps"})," and ",(0,r.jsx)(t.code,{children:"participants"})," via the ",(0,r.jsx)(t.code,{children:"context"})," attribute,\nand any ",(0,r.jsx)(t.code,{children:"extensions"})," can be converted to attributes accessible as attributes beginning with an underscore."]}),"\n",(0,r.jsx)(t.h2,{id:"matchups",children:"matchUps"}),"\n",(0,r.jsxs)(t.p,{children:["All API calls which return ",(0,r.jsx)(t.strong,{children:"matchUps"})," return deep copies with context.\nAttributes that are added for ",(0,r.jsx)(t.strong,{children:"matchUps"})," include: ",(0,r.jsx)(t.code,{children:"structureId, structureName, drawId, eventId, eventName, tournamentId"})," and ",(0,r.jsx)(t.code,{children:"tournamentName"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["In the ",(0,r.jsx)(t.strong,{children:"Live Editor"})," example below, ",(0,r.jsx)(t.code,{children:"{ inContext: false }"})," overrides the default behavior.\nChange the value to ",(0,r.jsx)(t.code,{children:"true"})," and compare the ",(0,r.jsx)(t.code,{children:"matchUp"})," objects to see the difference when context is added."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:"function ContextDemo(props) {\n  const { tournamentRecord } = mocksEngine.generateTournamentRecord({\n    drawProfiles: [{ drawSize: 4 }],\n  });\n  tournamentEngine.setState(tournamentRecord);\n\n  const { matchUps } = tournamentEngine.allTournamentMatchUps({\n    inContext: false,\n  });\n\n  return <MatchUps data={matchUps} />;\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"tournamentparticipants",children:"tournamentParticipants"}),"\n",(0,r.jsxs)(t.p,{children:["When participants are returned with ",(0,r.jsx)(t.code,{children:"{ inContext: true }"}),", those that are ",(0,r.jsx)(t.code,{children:"participantType"})," ",(0,r.jsx)(t.strong,{children:"PAIR, TEAM, or GROUP"})," include ",(0,r.jsx)(t.code,{children:"individualParticipants"})," derived from ",(0,r.jsx)(t.code,{children:"individualParticipantIds"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Context is also added if ",(0,r.jsx)(t.code,{children:"withStatistics, withOpponents, withMatchUps, or scheduleAnalysis"})," are true."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const {\n  participants,\n  participantIdsWithConflicts, // array of participantIds which have scheduling conflicts\n} = tournamentEngine.getParticipants({\n  inContext: true,\n\n  participantFilters: { participantTypes: [PAIR] },\n  scheduleAnalysis: { scheduledMinutesDifference },\n  policyDefinitions,\n  withStatistics,\n  withOpponents,\n  withMatchUps,\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"converted-extensions",children:"Converted Extensions"}),"\n",(0,r.jsxs)(t.p,{children:["All elements that are returned ",(0,r.jsx)(t.strong,{children:"inContext"})," include converted extensions. See ",(0,r.jsx)(t.strong,{children:"makeDeepCopy"})," in ",(0,r.jsx)(t.a,{href:"../utilities/make-deep-copy",children:"Utilities"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,i.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7942:(e,t,n)=>{n.d(t,{ah:()=>d});var r=n(959);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),d=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,a=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),p=d(n),u=i,x=p["".concat(a,".").concat(u)]||p[u]||l[u]||c;return n?r.createElement(x,o(o({ref:t},h),{},{components:n})):r.createElement(x,o({ref:t},h))}));h.displayName="MDXCreateElement"}}]);