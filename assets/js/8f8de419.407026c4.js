"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7628],{7942:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>v});var r=n(959);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(n),p=a,v=c["".concat(u,".").concat(p)]||c[p]||h[p]||l;return n?r.createElement(v,i(i({ref:t},s),{},{components:n})):r.createElement(v,i({ref:t},s))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2205:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=n(8957),a=(n(959),n(7942));const l={title:"API"},i=void 0,o={unversionedId:"tools/tools-api",id:"tools/tools-api",title:"API",description:"Convenience methods useful for projects working with the Competition Factory.",source:"@site/docs/tools/tools-api.md",sourceDirName:"tools",slug:"/tools/tools-api",permalink:"/tods-competition-factory/docs/tools/tools-api",draft:!1,tags:[],version:"current",frontMatter:{title:"API"},sidebar:"docs",previous:{title:"JSON2CSV",permalink:"/tods-competition-factory/docs/tools/json-to-csv"},next:{title:"Testing Overview",permalink:"/tods-competition-factory/docs/testing/testing-overview"}},u={},d=[{value:"addExtension",id:"addextension",level:2},{value:"calculateWinCriteria",id:"calculatewincriteria",level:2},{value:"categoryCanContain",id:"categorycancontain",level:2},{value:"chunkArray",id:"chunkarray",level:2},{value:"countValues",id:"countvalues",level:2},{value:"createMap",id:"createmap",level:2},{value:"generateDateRange",id:"generatedaterange",level:2},{value:"dateTime",id:"datetime",level:2},{value:"definedAttributes",id:"definedattributes",level:2},{value:"dehydrateMatchUps",id:"dehydratematchups",level:2},{value:"extractAttributes",id:"extractattributes",level:2},{value:"findExtension",id:"findextension",level:2},{value:"generateHashCode",id:"generatehashcode",level:2},{value:"generateRange",id:"generaterange",level:2},{value:"generateScoreString",id:"generatescorestring",level:2},{value:"generateTimeCode",id:"generatetimecode",level:2},{value:"getScaleValues",id:"getscalevalues",level:2},{value:"getTimeItem",id:"gettimeitem",level:2},{value:"hasAttributeValues",id:"hasattributevalues",level:2},{value:"instanceCount",id:"instancecount",level:2},{value:"intersection",id:"intersection",level:2},{value:"isAdHoc",id:"isadhoc",level:2},{value:"isConvertableInteger",id:"isconvertableinteger",level:2},{value:"isPowerOf2",id:"ispowerof2",level:2},{value:"JSON2CSV",id:"json2csv",level:2},{value:"makeDeepCopy",id:"makedeepcopy",level:2},{value:"matchUpSort",id:"matchupsort",level:2},{value:"nearestPowerOf2",id:"nearestpowerof2",level:2},{value:"nextPowerOf2",id:"nextpowerof2",level:2},{value:"overlap",id:"overlap",level:2},{value:"parseScoreString",id:"parsescorestring",level:2},{value:"randomMember",id:"randommember",level:2},{value:"randomPop",id:"randompop",level:2},{value:"roundRobinGroups",id:"roundrobingroups",level:2},{value:"checkScoreHasValue",id:"checkscorehasvalue",level:2},{value:"shuffleArray",id:"shufflearray",level:2},{value:"structureSort",id:"structuresort",level:2},{value:"tidyScore",id:"tidyscore",level:2},{value:"tieFormatGenderValidityCheck",id:"tieformatgendervaliditycheck",level:2},{value:"unique",id:"unique",level:2},{value:"UUID",id:"uuid",level:2},{value:"UUIDS",id:"uuids",level:2},{value:"validateTieFormat",id:"validatetieformat",level:2},{value:"visualizeScheduledMatchUps",id:"visualizescheduledmatchups",level:2}],s={toc:d},c="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Convenience methods useful for projects working with the Competition Factory."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"addextension"},"addExtension"),(0,a.kt)("p",null,"Adds extension entry to element ",(0,a.kt)("inlineCode",{parentName:"p"},".extensions")," attribute; error checking; creates attribute if necessary; overwrites existing value;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"tools.addExtension({\n  extension: { name, value },\n  creationTime, // boolean - add timeStamp\n  element: obj,\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"calculatewincriteria"},"calculateWinCriteria"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"categorycancontain"},"categoryCanContain"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const {\n  invalidRatingRange,\n  invalidAgeMinDate,\n  invalidAgeMaxDate,\n  invalidBallType,\n  invalidAgeMax,\n  invalidAgeMin,\n  valid,\n} = tools.categoryCanContain({\n  childCategory: { ageCategoryCode: 'U16' },\n  category: { ageCategoryCode: 'U18' },\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"chunkarray"},"chunkArray"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"countvalues"},"countValues"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"createmap"},"createMap"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatedaterange"},"generateDateRange"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"datetime"},"dateTime"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"definedattributes"},"definedAttributes"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"dehydratematchups"},"dehydrateMatchUps"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extractattributes"},"extractAttributes"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"findextension"},"findExtension"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { extension } = tools.findExtension({ element, name });\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatehashcode"},"generateHashCode"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generaterange"},"generateRange"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatescorestring"},"generateScoreString"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"generatetimecode"},"generateTimeCode"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"getscalevalues"},"getScaleValues"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"gettimeitem"},"getTimeItem"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"hasattributevalues"},"hasAttributeValues"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"instancecount"},"instanceCount"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"intersection"},"intersection"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"isadhoc"},"isAdHoc"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"isconvertableinteger"},"isConvertableInteger"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"ispowerof2"},"isPowerOf2"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"json2csv"},"JSON2CSV"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/tods-competition-factory/docs/tools/json-to-csv"},"documentation page"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"makedeepcopy"},"makeDeepCopy"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"matchupsort"},"matchUpSort"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"nearestpowerof2"},"nearestPowerOf2"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"nextpowerof2"},"nextPowerOf2"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"overlap"},"overlap"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"parsescorestring"},"parseScoreString"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"randommember"},"randomMember"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"randompop"},"randomPop"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"roundrobingroups"},"roundRobinGroups"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"checkscorehasvalue"},"checkScoreHasValue"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"shufflearray"},"shuffleArray"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"structuresort"},"structureSort"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"tidyscore"},"tidyScore"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"tieformatgendervaliditycheck"},"tieFormatGenderValidityCheck"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { valid, error } = tools.tieFormatGenderValidityCheck({\n  referenceGender, // if not present then always returns { valid: true }\n  matchUpType, // optional - check whether matchUpType is valid for referenceGender\n  gender,\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"unique"},"unique"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"engine.unique([]); // returns unique members of an array\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"uuid"},"UUID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"engine.UUID(); // generates unique identifier\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"uuids"},"UUIDS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"engine.UUIDS(count); // generates count unique identifiers\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"validatetieformat"},"validateTieFormat"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"visualizescheduledmatchups"},"visualizeScheduledMatchUps"),(0,a.kt)("p",null,"Generate color-coded printout of matchUp schedule details"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"tools.visualizeScheduledMatchUps({\n  showGlobalLogs: true,\n  scheduledMatchUps,\n});\n")))}h.isMDXComponent=!0}}]);