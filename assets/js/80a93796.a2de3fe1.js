"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1491],{1900:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var r=t(1527),i=t(7942);const a={title:"utilities API"},s=void 0,l={id:"utilities/utilities-api",title:"utilities API",description:"Convenience methods useful for projects working with the Competition Factory.",source:"@site/docs/utilities/utilities-api.md",sourceDirName:"utilities",slug:"/utilities/utilities-api",permalink:"/tods-competition-factory/docs/utilities/utilities-api",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"utilities API"},sidebar:"docs",previous:{title:"JSON2CSV",permalink:"/tods-competition-factory/docs/utilities/json-to-csv"}},d={},o=[{value:"addExtension",id:"addextension",level:2},{value:"calculateWinCriteria",id:"calculatewincriteria",level:2},{value:"chunkArray",id:"chunkarray",level:2},{value:"compareTieFormats",id:"comparetieformats",level:2},{value:"countValues",id:"countvalues",level:2},{value:"createMap",id:"createmap",level:2},{value:"dateRange",id:"daterange",level:2},{value:"dateTime",id:"datetime",level:2},{value:"definedAttributes",id:"definedattributes",level:2},{value:"dehydrateMatchUps",id:"dehydratematchups",level:2},{value:"extractAttributes",id:"extractattributes",level:2},{value:"findExtension",id:"findextension",level:2},{value:"generateHashCode",id:"generatehashcode",level:2},{value:"generateRange",id:"generaterange",level:2},{value:"generateScoreString",id:"generatescorestring",level:2},{value:"generateTimeCode",id:"generatetimecode",level:2},{value:"getCategoryAgeDetails",id:"getcategoryagedetails",level:2},{value:"getScaleValues",id:"getscalevalues",level:2},{value:"getTimeItem",id:"gettimeitem",level:2},{value:"hasAttributeValues",id:"hasattributevalues",level:2},{value:"instanceCount",id:"instancecount",level:2},{value:"intersection",id:"intersection",level:2},{value:"isAdHoc",id:"isadhoc",level:2},{value:"isConvertableInteger",id:"isconvertableinteger",level:2},{value:"isPowerOf2",id:"ispowerof2",level:2},{value:"JSON2CSV",id:"json2csv",level:2},{value:"makeDeepCopy",id:"makedeepcopy",level:2},{value:"matchUpSort",id:"matchupsort",level:2},{value:"nearestPowerOf2",id:"nearestpowerof2",level:2},{value:"nextPowerOf2",id:"nextpowerof2",level:2},{value:"overlap",id:"overlap",level:2},{value:"parseScoreString",id:"parsescorestring",level:2},{value:"randomMember",id:"randommember",level:2},{value:"randomPop",id:"randompop",level:2},{value:"roundRobinGroups",id:"roundrobingroups",level:2},{value:"scoreHasValue",id:"scorehasvalue",level:2},{value:"shuffleArray",id:"shufflearray",level:2},{value:"structureSort",id:"structuresort",level:2},{value:"tidyScore",id:"tidyscore",level:2},{value:"unique",id:"unique",level:2},{value:"UUID",id:"uuid",level:2},{value:"UUIDS",id:"uuids",level:2},{value:"validateTieFormat",id:"validatetieformat",level:2},{value:"visualizeScheduledMatchUps",id:"visualizescheduledmatchups",level:2}];function c(e){const n={code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,i.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Convenience methods useful for projects working with the Competition Factory."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"addextension",children:"addExtension"}),"\n",(0,r.jsxs)(n.p,{children:["Adds extension entry to element ",(0,r.jsx)(n.code,{children:".extensions"})," attribute; error checking; creates attribute if necessary; overwrites existing value;"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"addExtension({\n  extension: { name, value },\n  creationTime, // boolean - add timeStamp\n  element: obj,\n});\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"calculatewincriteria",children:"calculateWinCriteria"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"chunkarray",children:"chunkArray"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"comparetieformats",children:"compareTieFormats"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"countvalues",children:"countValues"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"createmap",children:"createMap"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"daterange",children:"dateRange"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"datetime",children:"dateTime"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"definedattributes",children:"definedAttributes"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"dehydratematchups",children:"dehydrateMatchUps"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"extractattributes",children:"extractAttributes"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"findextension",children:"findExtension"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { extension } = findExtension({ element, name });\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"generatehashcode",children:"generateHashCode"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"generaterange",children:"generateRange"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"generatescorestring",children:"generateScoreString"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"generatetimecode",children:"generateTimeCode"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"getcategoryagedetails",children:"getCategoryAgeDetails"}),"\n",(0,r.jsxs)(n.p,{children:["Parses ",(0,r.jsx)(n.code,{children:"ageCategoryCode"})," to determine min/max eligible birthdates and min/max age. Category age/birthdate boundaries can be specified using other attributes.\nIf attributes are combined will sanity check correspondence and return an array of any encountered errors."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const {\n} = utilities.getCategoryAgeDetails({\n  consideredDate, // returns either supplied value or date when invoked\n  combinedAge, // boolean indicating that ageMax and ageMin are combined values\n  ageMaxDate,\n  ageMinDate,\n  ageMax,\n  ageMin,\n  errors,\n} = utilities.getCategoryAgeDetails({\n  consideredDate, // optional - date string 'YYYY-MM-DD'; defaults to current date\n  category: {\n    ageCategoryCode, // TODS code, e.g. 'U18', '18U', '18O', 'O18', '8O-U18', 'C50-70'\n    categoryName, // when no ageCategoryCode is provided, an attempt is made to find in categoryName\n    ageMaxDate, // latest/most recent date acceptable for eligibilty\n    ageMinDate, // earliest date acceptable for eligibility\n    ageMax, // maximum age acceptable for eligibility\n    ageMin, // minimum age acceptable for eligibility\n  },\n});\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"getscalevalues",children:"getScaleValues"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"gettimeitem",children:"getTimeItem"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"hasattributevalues",children:"hasAttributeValues"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"instancecount",children:"instanceCount"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"intersection",children:"intersection"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"isadhoc",children:"isAdHoc"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"isconvertableinteger",children:"isConvertableInteger"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"ispowerof2",children:"isPowerOf2"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"json2csv",children:"JSON2CSV"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"makedeepcopy",children:"makeDeepCopy"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"matchupsort",children:"matchUpSort"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"nearestpowerof2",children:"nearestPowerOf2"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"nextpowerof2",children:"nextPowerOf2"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"overlap",children:"overlap"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"parsescorestring",children:"parseScoreString"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"randommember",children:"randomMember"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"randompop",children:"randomPop"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"roundrobingroups",children:"roundRobinGroups"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"scorehasvalue",children:"scoreHasValue"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"shufflearray",children:"shuffleArray"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"structuresort",children:"structureSort"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tidyscore",children:"tidyScore"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"unique",children:"unique"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"uuid",children:"UUID"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"uuids",children:"UUIDS"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"validatetieformat",children:"validateTieFormat"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"visualizescheduledmatchups",children:"visualizeScheduledMatchUps"}),"\n",(0,r.jsx)(n.p,{children:"Generate color-coded printout of matchUp schedule details"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"visualizeScheduledMatchUps({ scheduledMatchUps, showGlobalLogs: true });\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},7942:(e,n,t)=>{t.d(n,{ah:()=>o});var r=t(959);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),o=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=o(t),v=i,x=h["".concat(d,".").concat(v)]||h[v]||c[v]||a;return t?r.createElement(x,s(s({ref:n},u),{},{components:t})):r.createElement(x,s({ref:n},u))}));u.displayName="MDXCreateElement"}}]);