"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[876],{3805:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>g});var r=n(758);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3658:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(2232),a=(n(758),n(3805));const i={title:"Overview"},o=void 0,c={unversionedId:"concepts/scheduling-overview",id:"concepts/scheduling-overview",title:"Overview",description:"Overview",source:"@site/docs/concepts/scheduling-overview.mdx",sourceDirName:"concepts",slug:"/concepts/scheduling-overview",permalink:"/tods-competition-factory/docs/concepts/scheduling-overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Overview"},sidebar:"docs",previous:{title:"Actions",permalink:"/tods-competition-factory/docs/concepts/actions"},next:{title:"Venues and Courts",permalink:"/tods-competition-factory/docs/concepts/venues-courts"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Iterative Garman scheduling",id:"iterative-garman-scheduling",level:2}],l={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.yg)(u,(0,r.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"Scheduling is the process of assigning ",(0,a.yg)("strong",{parentName:"p"},"dates"),", ",(0,a.yg)("strong",{parentName:"p"},"venues"),", ",(0,a.yg)("strong",{parentName:"p"},"courts")," and ",(0,a.yg)("strong",{parentName:"p"},"times")," to tournament ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUps"),"."),(0,a.yg)("p",null,"In TODS, scheduling information is attached to ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUps")," as ",(0,a.yg)("inlineCode",{parentName:"p"},"timeItems")," and the schedule is derived by interrogating the scheduling information attached to ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUps"),".\nThis approach means that there is no master schedule object; it also means that when ",(0,a.yg)("inlineCode",{parentName:"p"},"drawDefinitions")," or draw ",(0,a.yg)("inlineCode",{parentName:"p"},"structures")," are removed there is no schedule to be cleared."),(0,a.yg)("p",null,"In the Competition Factory, scheduling is accomplished either direclty via scheduling methods such as ",(0,a.yg)("inlineCode",{parentName:"p"},"addMatchUpScheduledDate"),", or automatically via ",(0,a.yg)("inlineCode",{parentName:"p"},"scheduleMatchUps")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"scheduleProfileRounds"),"."),(0,a.yg)("p",null,"Automated scheduling, along with direct assignment of venues and courts, depends on having venues with courts which have defined ",(0,a.yg)("inlineCode",{parentName:"p"},"dateAvailability"),"."),(0,a.yg)("h2",{id:"iterative-garman-scheduling"},"Iterative Garman scheduling"),(0,a.yg)("p",null,"The Competition Factory engine supports Garman scheduling of ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUps")," from multiple tournaments across shared ",(0,a.yg)("inlineCode",{parentName:"p"},"venues"),"."),(0,a.yg)("p",null,"The Garman formula calculates the times at which ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUps")," may be scheduled, taking into consideration court availability\nand average minutes per match, but it does not inherently support the ",(0,a.yg)("strong",{parentName:"p"},"average minutes")," per ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUp")," being ",(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("em",{parentName:"strong"},"different")),"\nacross blocks of ",(0,a.yg)("inlineCode",{parentName:"p"},"matchUps"),"."))}d.isMDXComponent=!0}}]);