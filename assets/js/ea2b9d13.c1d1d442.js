"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4999],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,y=u["".concat(p,".").concat(m)]||u[m]||l[m]||r;return n?a.createElement(y,i(i({ref:t},d),{},{components:n})):a.createElement(y,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4350:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={title:"Subscriptions"},i=void 0,s={unversionedId:"concepts/subscriptions",id:"concepts/subscriptions",title:"Subscriptions",description:"Subscriptions enable external methods to be called when certain events occur while the Competition Factory engines are mutating a tournament document.",source:"@site/docs/concepts/subscriptions.md",sourceDirName:"concepts",slug:"/concepts/subscriptions",permalink:"/tods-competition-factory/docs/concepts/subscriptions",draft:!1,tags:[],version:"current",frontMatter:{title:"Subscriptions"},sidebar:"docs",previous:{title:"Time Items",permalink:"/tods-competition-factory/docs/concepts/timeItems"},next:{title:"Overview",permalink:"/tods-competition-factory/docs/engines/mocks-engine-overview"}},p={},c=[],d={toc:c};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Subscriptions enable external methods to be called when certain events occur while the Competition Factory engines are mutating a tournament document."),(0,o.kt)("p",null,"The payload for each subscription is an array of objects, with each element of the array having been produced by an ",(0,o.kt)("inlineCode",{parentName:"p"},"addNotice")," statement within engine methods. Subscription methods are called ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"after"))," an engine method completes, not during execution."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"All engine methods may be passed the additional parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"{ delayNotify: true }"),", in which case subscription methods are ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"not"))," called until a subsequent engine method is invoked.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const subscriptions = {\n  audit: (payload) => {}, // payload = [{ action: '', payload: {} }]\n\n  addMatchUps: (payload) => {}, // payload = [{ matchUps }]\n  deletedMatchUpIds: (payload) => {}, // payload = [{ matchUpIds }]\n  modifyMatchUp: (payload) => {}, // payload = [{ matchUp }]\n\n  publishEvent: (payload) => (), // payload = [{ eventData }]\n  unPublishEvent: (payload) => (), // payload = [{ eventId }]\n\n  addVenue: (payload) => (), // payload [{ venue }]\n  modifyVenue: (payload) => (), // payload [{ venue }]\n  deleteVenue: (payload) => (), // payload [{ venueId }]\n\n  addParticipants: (payload) => () // payload [{ participants }]\n  modifyParticipants: (payload) => () // payload [{ participants }]\n  deleteParticipants: (payload) => () // payload [{ participantIds }]\n\n  modifyPositionAssignments: (payload) => () // pauload [{ positionAssignments, tournamentId, eventId, drawId, structureId}]\n  modifySeedAssignments: (payload) => () // pauload [{ seedAssignments, tournamentId, eventId, drawId, structureId}]\n\n  addDrawDefinitions: (payload) => (), // payload = [{ drawDefinition }]\n  modifyDrawDefinitions: (payload) => (), // payload = [{ drawDefinition }]\n  deletedDrawIds: (payload) => (), // payload = [{ drawId }]\n};\n")),(0,o.kt)("p",null,"Subscriptions are defined once for all engines."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { setSubcriptions } from 'tods-competition-factory';\n\nsetSubscriptions(subscriptions);\n")))}l.isMDXComponent=!0}}]);