"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[937],{3461:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(4996),i=n(7465),s=n(7294);const o=e=>{let{drawType:t,drawSize:n=8}=e;const o={seedsCount:4,drawType:t,drawSize:n};"AD_HOC"===t&&Object.assign(o,{drawMatic:!0,roundsCount:3});const r=a.QO.generateTournamentRecord({drawProfiles:[o],completeAllMatchUps:!0,randomWinningSide:!0}),{tournamentRecord:d,eventIds:l}=r||{},c=null==l?void 0:l[0],{eventData:m}=a.M6.setState(d).getEventData({participantsProfile:{withIOC:!0,withISO2:!0},eventId:c})||{},p=a.hC.randomMember(["Australian","Wimbledon","National","US Open","French","ITF"]);return s.createElement("div",{style:{zoom:.9}},s.createElement(i.xd,{compositionName:p,eventData:m,events:{}}))}},3115:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var a=n(7462),i=(n(7294),n(4137)),s=n(3461);const o={title:"Introduction",slug:"/"},r=void 0,d={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Tournament Business Rules",source:"@site/docs/introduction.mdx",sourceDirName:".",slug:"/",permalink:"/tods-competition-factory/docs/",draft:!1,tags:[],version:"current",frontMatter:{title:"Introduction",slug:"/"},sidebar:"docs",next:{title:"State Engines",permalink:"/tods-competition-factory/docs/state-engines"}},l={},c=[{value:"Tournament Business Rules",id:"tournament-business-rules",level:2},{value:"Data Standards",id:"data-standards",level:2},{value:"Time Capsule",id:"time-capsule",level:2},{value:"Interactive Examples",id:"interactive-examples",level:2}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"tournament-business-rules"},"Tournament Business Rules"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Competition Factory"),' is a collection of "state engines" for transforming/mutating tournament records and is intended to ensure the integrity of Tournaments by managing all state transformations.\nThese engines embody the "business rules" required by Tournament Management Solutions, and enable an entirely new way of constructing software to manage tournaments.'),(0,i.kt)("p",null,"The rules governing the creation of draws, seeding, and participant movement can be present on a standalone client, on a server, or both.\nAn entire tournament management solution ",(0,i.kt)("a",{parentName:"p",href:"https://courthive.github.io/TMX"},"can run in a browser"),", or a client can communicate with a server which utilizes a database, or simply the file system.\nServer deployments support highly scaleable asynchronous processing models in ",(0,i.kt)("strong",{parentName:"p"},"Node.js"),"."),(0,i.kt)(s.Z,{drawSize:4,mdxType:"DrawType"}),(0,i.kt)("h2",{id:"data-standards"},"Data Standards"),(0,i.kt)("p",null,"The Competition Factory utilizes the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://itftennis.atlassian.net/wiki/spaces/TODS/overview"},"Tennis Open Data Standards")),", ",(0,i.kt)("strong",{parentName:"p"},"(TODS)"),",\nwhich provide a document-based representation of all of the elements of a tournament including participants, events, draws, matchUps, contacts, and references to online resources.\nAlthough the data standard is emerging in the sport of Tennis, ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"the data structures apply to tournaments in many sports")),"."),(0,i.kt)("h2",{id:"time-capsule"},"Time Capsule"),(0,i.kt)("p",null,"After a tournament has been completed, a ",(0,i.kt)("strong",{parentName:"p"},"TODS"),' file can be considered a "time capsule" of all the information related to the constructrion and management of a tournament.\nThis means that complete historical data is available in one cross-platform, database-independent JSON file, removing all concerns about keeping software maintenance contracts active in order to retain access to data,\nas well as any reliance on applications which interpret database schemas.'),(0,i.kt)("h2",{id:"interactive-examples"},"Interactive Examples"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"This documentation includes Live Code Editors to enable direct interaction with the APIs. The ",(0,i.kt)("inlineCode",{parentName:"p"},"drawEngine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tournamentEngine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"competitionEngine"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"mocksEngine")," can be accessed in any ",(0,i.kt)("strong",{parentName:"p"},"LIVE EDITOR"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function GiveThanks(props) {\n  const thanks = tournamentEngine.credits();\n\n  return <pre>{thanks}</pre>;\n}\n")))}p.isMDXComponent=!0}}]);