"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3637],{9276:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>y});var o=t(5271);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),p=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return o.createElement(c.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=r,y=d["".concat(c,".").concat(u)]||d[u]||m[u]||i;return t?o.createElement(y,a(a({ref:n},s),{},{components:t})):o.createElement(y,a({ref:n},s))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1935:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=t(8957),r=(t(5271),t(9276));const i={title:"Policy Governor"},a=void 0,l={unversionedId:"governors/policy-governor",id:"governors/policy-governor",title:"Policy Governor",description:"attachPolicies",source:"@site/docs/governors/policy-governor.md",sourceDirName:"governors",slug:"/governors/policy-governor",permalink:"/tods-competition-factory/docs/governors/policy-governor",draft:!1,tags:[],version:"current",frontMatter:{title:"Policy Governor"},sidebar:"docs",previous:{title:"Participant Governor",permalink:"/tods-competition-factory/docs/governors/participant-governor"},next:{title:"Publishing Governor",permalink:"/tods-competition-factory/docs/governors/publishing-governor"}},c={},p=[{value:"attachPolicies",id:"attachpolicies",level:2},{value:"findPolicy",id:"findpolicy",level:2},{value:"removePolicy",id:"removepolicy",level:2}],s={toc:p},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { policyGovernor } from 'tods-competition-factory';\n")),(0,r.kt)("h2",{id:"attachpolicies"},"attachPolicies"),(0,r.kt)("p",null,"Attaches policy definitions to ",(0,r.kt)("inlineCode",{parentName:"p"},"tournamentRecords"),", a ",(0,r.kt)("inlineCode",{parentName:"p"},"tournamentRecord"),", an ",(0,r.kt)("inlineCode",{parentName:"p"},"event"),", or a ",(0,r.kt)("inlineCode",{parentName:"p"},"drawDefinition"),"."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/policies"},"Policies"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"engine.attachPolicies({\n  policyDefinitions: SEEDING_POLICY,\n  allowReplacement, // optional boolean\n  tournamentId, // optional\n  eventId, // optional\n  drawId, // optional\n});\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"findpolicy"},"findPolicy"),(0,r.kt)("p",null,"Find ",(0,r.kt)("inlineCode",{parentName:"p"},"policyType")," on a ",(0,r.kt)("inlineCode",{parentName:"p"},"tournamentRecord"),", an ",(0,r.kt)("inlineCode",{parentName:"p"},"event"),", or a ",(0,r.kt)("inlineCode",{parentName:"p"},"drawDefinition"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { policy } = engine.findPolicy({\n  policyType: POLICY_TYPE_SCORING,\n  tournamentId, // optional\n  eventId, // optional\n  drawId, // optional\n});\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"removepolicy"},"removePolicy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"engine.removePolicy({ policyType }); // remove from all tournamentRecords\nengine.removePolicy({ policyType, tournamentId }); // remove from specified tournamentRecord\nengine.removePolicy({ policyType, eventId }); // remove from specified event\nengine.removePolicy({ policyType, drawId }); // remove from specified drawDefinition\n")),(0,r.kt)("hr",null))}m.isMDXComponent=!0}}]);