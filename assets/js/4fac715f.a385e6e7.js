"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1384],{3805:(e,t,n)=>{n.d(t,{xA:()=>o,yg:()=>s});var a=n(758);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function g(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):g(g({},t),e)),n},o=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,s=m["".concat(l,".").concat(d)]||m[d]||y[d]||i;return n?a.createElement(s,g(g({ref:t},o),{},{components:n})):a.createElement(s,g({ref:t},o))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,g=new Array(i);g[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:r,g[1]=p;for(var c=2;c<i;c++)g[c]=n[c];return a.createElement.apply(null,g)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3927:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>g,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(2232),r=(n(758),n(3805));const i={title:"Draw Engine"},g=void 0,p={unversionedId:"engines/draw-engine-overview",id:"engines/draw-engine-overview",title:"Draw Engine",description:"The drawEngine_** generates drawDefinitions and matchUp results, managing participant movement within and between structures. Participants, however, are not necessary for the operations performed by the drawEngine_, and reference to participantIds only occurs in two places:",source:"@site/docs/engines/draw-engine-overview.md",sourceDirName:"engines",slug:"/engines/draw-engine-overview",permalink:"/tods-competition-factory/docs/engines/draw-engine-overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Draw Engine"}},l={},c=[{value:"Participant &quot;agnostic&quot;",id:"participant-agnostic",level:2},{value:"Changing matchUpStatus",id:"changing-matchupstatus",level:2},{value:"matchUpStatus effects",id:"matchupstatus-effects",level:2},{value:"Single structure effects",id:"single-structure-effects",level:2},{value:"Multi-structure effects",id:"multi-structure-effects",level:2}],o={toc:c},m="wrapper";function y(e){let{components:t,...n}=e;return(0,r.yg)(m,(0,a.A)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"The ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("em",{parentName:"strong"},"drawEngine"))," generates drawDefinitions and matchUp results, managing participant movement within and between structures. Participants, however, are not necessary for the operations performed by the ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("em",{parentName:"strong"},"drawEngine")),", and reference to ",(0,r.yg)("inlineCode",{parentName:"p"},"participantIds")," only occurs in two places:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"drawDefinition.entries")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"drawDefinition.structures[#].positionAssignments"))),(0,r.yg)("h2",{id:"participant-agnostic"},'Participant "agnostic"'),(0,r.yg)("p",null,"The ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("em",{parentName:"strong"},"drawEngine")),' is "participant agnostic", and doesn\'t know or care whether the participants moving through the ',(0,r.yg)("inlineCode",{parentName:"p"},"structures")," of a draw are ",(0,r.yg)("inlineCode",{parentName:"p"},"participantType")," INDIVIDUAL, PAIR or TEAM."),(0,r.yg)("p",null,"The logic governing participant movements between ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUps")," within ",(0,r.yg)("inlineCode",{parentName:"p"},"structures")," requires only ",(0,r.yg)("inlineCode",{parentName:"p"},"drawPositions"),"; ",(0,r.yg)("inlineCode",{parentName:"p"},"positionAssignments")," are used when requesting ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUps"),' with "context" to add ',(0,r.yg)("inlineCode",{parentName:"p"},"sides")," which include ",(0,r.yg)("inlineCode",{parentName:"p"},"participants"),"."),(0,r.yg)("h2",{id:"changing-matchupstatus"},"Changing matchUpStatus"),(0,r.yg)("p",null,"Changing the ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUpStatus")," of a ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUp")," may affect other ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUps")," across the structures that make up a draw."),(0,r.yg)("p",null,"Any attempt to change from a ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("em",{parentName:"strong"},"directing"))," to a ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("em",{parentName:"strong"},"non-directing"))," ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUpStatus"),", or vice-versa, causes the ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("em",{parentName:"strong"},"drawEngine"))," to check the validity of the change and, if valid, to modify all affected ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUps"),"."),(0,r.yg)("h2",{id:"matchupstatus-effects"},"matchUpStatus effects"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"th"},"matchUpStatus")),(0,r.yg)("th",{parentName:"tr",align:"center"},"Completed"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Directing"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Active"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Upcoming"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BYE"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"RETIRED"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DEFAULTED"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"COMPLETED"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"WALKOVER"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE_DEFAULT"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"-"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE_WALKOVER"),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"-"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"INCOMPLETE"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"IN_PROGRESS"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SUSPENDED"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"},"x"),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TO_BE_PLAYED"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"},"x")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"NOT_PLAYED"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"},"x")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CANCELLED"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ABANDONED"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DEAD_RUBBER"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})))),(0,r.yg)("h2",{id:"single-structure-effects"},"Single structure effects"),(0,r.yg)("p",null,"If the effects of a change to a ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUpStatus")," are limited to a single structure, the only changes necessary are that ",(0,r.yg)("inlineCode",{parentName:"p"},"drawPositions")," of relevant ",(0,r.yg)("inlineCode",{parentName:"p"},"matchUps")," be modified to reflect participant movements across rounds."),(0,r.yg)("h2",{id:"multi-structure-effects"},"Multi-structure effects"),(0,r.yg)("p",null,"When there are multiple structures in a draw, such as COMPASS or DOUBLE ELIMINATION draws, then losers (and sometimes winners) can move across structures. For instance a first round loser in an East structure will move into the first round of the West structure. When this happens the ",(0,r.yg)("inlineCode",{parentName:"p"},"positionAssignments")," for the target structure must be updated to map the ",(0,r.yg)("inlineCode",{parentName:"p"},"participantId")," to the ",(0,r.yg)("inlineCode",{parentName:"p"},"drawPosition")," where they have been assigned."))}y.isMDXComponent=!0}}]);