"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8812],{6076:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var r=n(1527),s=n(7942);const i={title:"Draw Engine"},c=void 0,l={id:"engines/draw-engine-overview",title:"Draw Engine",description:"The drawEngine_** generates drawDefinitions and matchUp results, managing participant movement within and between structures. Participants, however, are not necessary for the operations performed by the drawEngine_, and reference to participantIds only occurs in two places:",source:"@site/docs/engines/draw-engine-overview.md",sourceDirName:"engines",slug:"/engines/draw-engine-overview",permalink:"/tods-competition-factory/docs/engines/draw-engine-overview",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Draw Engine"},sidebar:"docs",previous:{title:"tournamentEngine API",permalink:"/tods-competition-factory/docs/apis/tournament-engine-api"},next:{title:"drawEngine API",permalink:"/tods-competition-factory/docs/apis/draw-engine-api"}},d={},a=[{value:"Participant &quot;agnostic&quot;",id:"participant-agnostic",level:2},{value:"Changing matchUpStatus",id:"changing-matchupstatus",level:2},{value:"matchUpStatus effects",id:"matchupstatus-effects",level:2},{value:"Single structure effects",id:"single-structure-effects",level:2},{value:"Multi-structure effects",id:"multi-structure-effects",level:2}];function x(e){const t={code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"drawEngine"})})," generates drawDefinitions and matchUp results, managing participant movement within and between structures. Participants, however, are not necessary for the operations performed by the ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"drawEngine"})}),", and reference to ",(0,r.jsx)(t.code,{children:"participantIds"})," only occurs in two places:"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"drawDefinition.entries"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"drawDefinition.structures[#].positionAssignments"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"participant-agnostic",children:'Participant "agnostic"'}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"drawEngine"})}),' is "participant agnostic", and doesn\'t know or care whether the participants moving through the ',(0,r.jsx)(t.code,{children:"structures"})," of a draw are ",(0,r.jsx)(t.code,{children:"participantType"})," INDIVIDUAL, PAIR or TEAM."]}),"\n",(0,r.jsxs)(t.p,{children:["The logic governing participant movements between ",(0,r.jsx)(t.code,{children:"matchUps"})," within ",(0,r.jsx)(t.code,{children:"structures"})," requires only ",(0,r.jsx)(t.code,{children:"drawPositions"}),"; ",(0,r.jsx)(t.code,{children:"positionAssignments"})," are used when requesting ",(0,r.jsx)(t.code,{children:"matchUps"}),' with "context" to add ',(0,r.jsx)(t.code,{children:"sides"})," which include ",(0,r.jsx)(t.code,{children:"participants"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"changing-matchupstatus",children:"Changing matchUpStatus"}),"\n",(0,r.jsxs)(t.p,{children:["Changing the ",(0,r.jsx)(t.code,{children:"matchUpStatus"})," of a ",(0,r.jsx)(t.code,{children:"matchUp"})," may affect other ",(0,r.jsx)(t.code,{children:"matchUps"})," across the structures that make up a draw."]}),"\n",(0,r.jsxs)(t.p,{children:["Any attempt to change from a ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"directing"})})," to a ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"non-directing"})})," ",(0,r.jsx)(t.code,{children:"matchUpStatus"}),", or vice-versa, causes the ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"drawEngine"})})," to check the validity of the change and, if valid, to modify all affected ",(0,r.jsx)(t.code,{children:"matchUps"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"matchupstatus-effects",children:"matchUpStatus effects"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:(0,r.jsx)(t.code,{children:"matchUpStatus"})}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Completed"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Directing"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Active"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Upcoming"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"BYE"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"RETIRED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DEFAULTED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"COMPLETED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"WALKOVER"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DOUBLE_DEFAULT"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DOUBLE_WALKOVER"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"INCOMPLETE"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"IN_PROGRESS"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SUSPENDED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TO_BE_PLAYED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NOT_PLAYED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"x"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CANCELLED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ABANDONED"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DEAD_RUBBER"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"single-structure-effects",children:"Single structure effects"}),"\n",(0,r.jsxs)(t.p,{children:["If the effects of a change to a ",(0,r.jsx)(t.code,{children:"matchUpStatus"})," are limited to a single structure, the only changes necessary are that ",(0,r.jsx)(t.code,{children:"drawPositions"})," of relevant ",(0,r.jsx)(t.code,{children:"matchUps"})," be modified to reflect participant movements across rounds."]}),"\n",(0,r.jsx)(t.h2,{id:"multi-structure-effects",children:"Multi-structure effects"}),"\n",(0,r.jsxs)(t.p,{children:["When there are multiple structures in a draw, such as COMPASS or DOUBLE ELIMINATION draws, then losers (and sometimes winners) can move across structures. For instance a first round loser in an East structure will move into the first round of the West structure. When this happens the ",(0,r.jsx)(t.code,{children:"positionAssignments"})," for the target structure must be updated to map the ",(0,r.jsx)(t.code,{children:"participantId"})," to the ",(0,r.jsx)(t.code,{children:"drawPosition"})," where they have been assigned."]})]})}function o(e={}){const{wrapper:t}={...(0,s.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},7942:(e,t,n)=>{n.d(t,{ah:()=>a});var r=n(959);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var d=r.createContext({}),a=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},x={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},o=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,d=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),h=a(n),j=s,g=h["".concat(d,".").concat(j)]||h[j]||x[j]||i;return n?r.createElement(g,c(c({ref:t},o),{},{components:n})):r.createElement(g,c({ref:t},o))}));o.displayName="MDXCreateElement"}}]);